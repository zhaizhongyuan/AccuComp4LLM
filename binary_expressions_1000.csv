"((-8 * -9) + (((-7 / -3) + (-2 / (7 - -9))) / (power(8, (-5 + 0)) + 4)))",72.5520791213
(7 - (((4 * 9) * ((2 * 8) / 4)) + ((((3 + -4) - -8) * -6) * -6))),-389
"(((9 * (-9 + ((-6 + -4) + 7))) / power(2, 3)) + (9 + (3 * power(1, 2))))",-1.5
"power((((-9 * -6) - (0 + -6)) / -6), (((0 + 0) + 0) + (0 + (0 + 0))))",1
((-8 * -9) + (-5 + (((8 + 0) * (7 + (1 * -7))) / (3 / (6 - 2))))),67
"((4 * (power(((-9 - -6) + -9), -1) - 6)) + (((8 * -9) * 1) * (9 / 4)))",-186.333333333
"(((power(6, -2) * ((-3 * power(7, -2)) + 7)) + (-5 / (6 + -3))) - (-9 - -7))",0.526077097506
"((-8 / 8) + ((7 - (power(-2, (0 * 9)) * ((2 - 3) + -9))) - (-2 * -5)))",6
"power(((((-2 * 8) * -7) * power(power((-5 / 2), -6), 2)) - 1), (5 + (0 + 0)))",-0.990640000978
"(((9 + (2 * 3)) / -1) * ((3 / -9) - power((((-6 / -9) + 8) / -1), 1)))",-125
((-4 * (((2 * 5) * -9) * -8)) + ((8 + (3 * (5 - -9))) + (-2 + -7))),-2839
"(((power(2, -5) / (-1 * -8)) - (power((-4 - (-8 + 2)), -2) - (5 / -3))) + -2)",-3.91276041667
"power(((-3 + -3) - -8), (((0 + 0) + (0 + 0)) + ((0 + 0) + (0 + 0))))",1
"power((8 * 3), (((-3 + 0) + 0) + ((0 + 0) + (0 + ((0 + 0) + 0)))))",7.2337962963e-05
"((-7 * power((((1 + -1) - 9) - -3), ((4 + (0 + 0)) + 0))) + (9 - 8))",-9071
(-9 / (((-4 + (7 * ((2 * 3) + 3))) * -6) * ((9 / 6) - (8 * -1)))),0.00267618198037
(((-1 * (5 + (4 / -7))) * ((9 - -6) / ((-9 - 6) + (-3 + 6)))) - -7),12.5357142857
((3 + ((6 + 8) - 0)) - ((-4 + 9) + (1 * ((-4 - (7 * -6)) + -6)))),-20
(((-4 * (-5 * 3)) * (-8 + -2)) * (((-9 * 4) + (-4 - -5)) - (0 - -5))),24000
"(((-7 + 3) / (power((5 / 1), -4) - (1 / (-9 - 7)))) + ((-7 - -4) - 1))",-66.4024960998
"(((-9 / (-1 - -4)) * (((-6 - -9) + power(6, 6)) - power(7, (-6 + 0)))) * 9)",-1259792.99977
"power(power(power((-3 / -8), (-1 + 0)), ((6 + (0 + 0)) + 0)), (3 + (0 + 0)))",46498311.3206
((-5 + (((((-7 / (4 - 5)) / -3) + -9) + -7) * 3)) + ((-9 / -7) + -4)),-62.7142857143
"(power(((-2 / -7) / 8), ((4 + 0) + (0 + 0))) * ((power(-8, -1) + -6) - -4))",-3.45721834652e-06
((5 - 7) + (((-5 + -7) + (((2 * -4) * 4) + (5 * 7))) + (-9 * 7))),-74
"power(((((5 / 2) * (-2 * ((-9 * -5) + -9))) / -4) - -2), ((-5 + 0) + 0))",4.36024316849e-09
((((5 / ((8 / (2 - -4)) + 8)) + -6) / (-8 - 8)) + ((6 * -6) + 1)),-34.6584821429
(9 - ((5 + 7) + (1 - ((((8 / 8) / 5) * (-5 / 4)) / (3 + -7))))),-3.9375
"((3 - -2) + power(((3 - ((-7 + 7) / 1)) + (-1 / power(3, (-1 + 0)))), 2))",5
"(((-3 * power((7 - -9), (-2 + 0))) - 5) * ((-5 + power(2, -4)) - (-8 + 2)))",-5.32495117188
"(power(-5, -2) / power(((((-2 * 5) - -9) - (5 - -7)) - 0), (0 + (0 + 0))))",0.04
"((7 * power(((7 + -3) + 5), -6)) * (((-9 / -1) * (4 / -9)) - (4 + 2)))",-0.000131717349621
"(power(((5 + 5) + (7 * ((-1 - (5 * -4)) - ((1 * -1) - 7)))), -3) + 7)",7.00000012689
"(power((((-1 + -1) + (6 * 2)) + 6), ((-2 + 0) + 0)) * (power(3, -2) + 9))",0.0355902777778
"(((power(5, 6) * (-2 / -7)) * (1 - 0)) * ((-2 + ((1 - 8) * -8)) - -9))",281250
"(((8 * (7 - -9)) + (-1 * -9)) - (6 + (((-4 / -3) / 7) + power(3, -4))))",130.797178131
"((6 / power((3 - 8), -2)) + (((-2 + (-4 - (2 * 4))) + power(1, 4)) + -4))",133
"((power(2, -5) - -3) - (power((-6 - 6), (0 / (-4 - 4))) + (6 + (2 + -7))))",1.03125
"power((((power(-2, -6) + 3) - -2) - -4), (((-4 + 0) + 0) + (0 + (0 + 0))))",0.000151361925322
"((power(((1 + 0) / 2), power(-2, (0 / (-5 * (-7 - -3))))) + 7) * (0 / 9))",0
"(((6 + 9) / -6) / power(((-3 - 0) / ((8 + (-5 - -6)) / (6 / -7))), 1))",-8.75
"((power((-4 / power(4, (-2 + 1))), (4 + (0 + 0))) / 2) / (8 * (-3 - 6)))",-455.111111111
((8 + ((-1 * 7) * (5 * 3))) / ((1 + -2) + ((-5 - 6) - (-8 + 7)))),8.81818181818
"(((8 - power(8, -2)) * 9) - ((9 * 5) * ((power(4, -6) - (-9 - 8)) + -7)))",-378.151611328
"power(4, ((power(5, (-2 + (((0 + 0) + 0) + 0))) + (-8 - (-4 + 3))) * 0))",1
"((3 - (-7 * 6)) + (((7 - -7) / -3) * (-1 * power(power(-4, -1), (-3 + 0)))))",-253.666666667
"(((-2 - -6) / (power(-5, -4) + (5 - (4 + 1)))) + (((4 - -5) + 0) + -4))",2505
"(power(1, -4) * (((9 + -4) - 5) + ((-9 / -2) / power((-5 + 9), (-3 + 0)))))",288
"(((-1 / (6 + -1)) + 2) / (((power((-7 + 8), -5) * (-8 + 3)) + 2) * 5))",-0.12
"((-3 / 2) - ((power(6, -3) - -3) / (((3 * -7) / (-7 + 5)) * (8 + 0))))",-1.53576940035
"((((-8 + power(-9, -4)) - (9 * -4)) + (-4 + 4)) / (((6 * -4) + -6) + -5))",-0.800004354737
"power(power(((-4 - (9 - -8)) + (8 + -6)), (6 + (0 + 0))), ((-5 + 0) + 0))",4.33902319184e-39
(((4 * (-1 * 8)) + (((-9 * 4) + -9) + ((4 * 2) - 5))) * (2 - -3)),-370
"(power(((-8 * 9) * 7), ((1 + 0) + ((0 + (0 + 0)) + 0))) + power(-5, -4))",-503.9984
"((((-3 * 4) + power(4, (-1 + 0))) * (7 + (2 * 9))) / ((4 + 4) - -7))",-19.5833333333
"(((2 + -9) * (-7 + 5)) / ((6 + ((-6 + power(1, -2)) / -7)) * (-4 * -1)))",0.521276595745
"(((-3 + ((3 * -8) + (2 + -9))) / -9) + (power((3 + 0), (6 + 0)) * 6))",4377.77777778
"((power(7, (-6 + (0 + 0))) * (-3 * (4 / 9))) + (-3 * ((2 - 3) - -3)))",-6.00001133315
"(((-7 * 5) - -1) + power((power(-8, -3) + (power((1 / -2), 0) * (-3 + -4))), -5))",-34.0000594161
(((((-3 - 1) / 5) - -7) / (-1 + ((-3 + -4) * ((-7 * 5) * 8)))) + 2),2.00316488004
(((3 * 5) / -2) / (((7 * -5) - ((-7 * -8) + -4)) * (9 / (5 - 7)))),-0.0191570881226
"((power((6 * -7), ((-3 + (0 + 0)) + 0)) / (-8 / -2)) - ((-6 + -5) * 7))",76.9999966256
"power(-6, (((-1 + (0 + 0)) + 0) + ((0 + (0 + 0)) + (0 + (0 + 0)))))",-0.166666666667
"(((power(-4, (1 + ((0 + 0) + 0))) - -4) + ((4 / 3) - power(5, 6))) / -2)",7811.83333333
((4 + (((5 + ((0 + -2) - 5)) / -1) - (6 / -5))) * ((-4 + -1) + 2)),-21.6
"((power((0 + -8), -1) + 1) - ((-3 - (-4 + 9)) + ((-3 - (-5 / 8)) - -5)))",6.25
"(power(-4, (-3 - 1)) - ((((-3 + -6) * -3) * (-7 / (8 / 4))) * (-6 - 8)))",-1322.99609375
"(((-2 + 5) * ((7 + -1) - 4)) * (-4 * ((0 - 8) + (power(7, 1) * -7))))",1368
"((((1 * -2) + (-4 - 0)) - -5) + (power(-3, (-1 - (-4 - -9))) / (-1 - -5)))",-0.999657064472
"((power(-4, 5) * (4 - 3)) * (((-1 * 3) - (-2 - 2)) + (power(6, -1) - 1)))",-170.666666667
(((((((7 - 5) - -9) * (3 + -2)) / 5) * 5) * -1) / ((2 + -3) + -2)),3.66666666667
"power(-5, ((0 + ((0 + 0) + (0 + 0))) + ((0 + (0 + (0 + 0))) + 0)))",1
"(power((8 * (2 - 1)), -6) * (((-7 * 5) * (3 + ((-6 * 7) / -7))) - 2))",-0.0012092590332
"(power((-8 * 8), (2 + (0 + 0))) + ((((-8 - 0) / -4) * (6 / 9)) / -2))",4095.33333333
"(power(((-1 + ((4 + (9 * 4)) - 9)) / ((-7 * 5) + (-7 * 1))), 3) * 1)",-0.36443148688
"((5 / (-8 * (-5 * 2))) + (power(4, ((-4 + 0) + 0)) * power(power(3, 4), 4)))",168151.316406
"(power(power(6, -1), 1) + (((power(9, 6) + -5) / ((9 / 7) + -9)) - (-3 * 9)))",-68862.6851852
"((power(-1, -3) + (6 * (9 * -9))) + (((3 - power(-1, 4)) + -8) - (1 - -3)))",-497
"(((2 + (power(-4, -6) + 1)) * ((0 + power(-5, 0)) / (0 - 3))) * (-3 - -3))",-0
"((-8 - 4) - (power(((-5 * -9) * ((6 - 4) + (1 - 5))), -1) + (-2 + -5)))",-4.98888888889
"(power((((0 + 5) - -2) * 8), ((2 + (0 + 0)) + (0 + 0))) - (6 * -7))",3178
"power(-8, ((3 + ((0 + 0) + (0 + 0))) + (0 + ((0 + 0) + (0 + 0)))))",-512
((3 + (0 - (4 / (-9 * 8)))) - (((6 + 4) / -9) * ((-2 / -3) - -6))),10.462962963
"power(power(-5, ((-3 + 0) + 0)), ((0 + (0 + 0)) + ((0 + (0 + 0)) + 0)))",1
"((6 - (power((-7 / -8), (((-2 + 0) + (0 + 0)) + (0 + 0))) * -8)) - 4)",12.4489795918
"power(3, ((-5 + 0) + (0 + ((0 + (0 + 0)) + (0 + ((0 + 0) + 0))))))",0.00411522633745
(((-7 - -6) - (-9 - 0)) / ((2 / (-6 + (5 * -4))) * ((3 * 7) + 2))),-4.52173913043
"((((8 / power(power((-5 + -5), -1), 6)) / (power(-2, -5) * (6 - 5))) / -5) - -6)",51200006
"((power(((1 / 7) - -6), (2 + ((0 + 0) + 0))) / (4 * -9)) + (2 * -5))",-11.048185941
(((-4 + (-2 - 8)) / ((5 + 6) / -3)) / ((-2 / ((8 * -8) - -4)) / 5)),572.727272727
"((power(5, -1) - power(-3, (5 + (0 + (0 + 0))))) / (-2 * (6 / (8 * 8))))",-1297.06666667
"((power((-3 - -9), 3) * ((7 + (4 + -4)) * (-7 / 6))) - (power(-5, -5) + 4))",-1767.99968
"((power(power(-2, -4), (4 + (0 + 0))) - power(0, (1 + 0))) * (0 * (-7 * 9)))",-0
"((power(power((2 + -1), 2), (2 - 0)) + -1) + (((9 + -1) * (-1 / -1)) / -8))",-1
"((((6 / ((-8 / -4) - (-8 + -8))) + (-3 / -3)) / (-1 + power(2, 3))) / 6)",0.031746031746
((7 * 1) * (((3 - (7 - 6)) * ((-5 * 4) - (7 - 7))) * (1 - -9))),-2800
"(((-4 - 1) * (-3 - -7)) + ((6 - 8) + ((-7 + -5) - power(-2, (-5 - 1)))))",-34.015625
"(-2 * (((9 - power(power((0 + 6), -5), 1)) + ((7 / -9) - (7 + -4))) + 1))",-12.4441872428
"((3 - 0) * ((-8 / ((-4 + power(-2, -3)) * 4)) * (5 * (0 / (-8 * 8)))))",-0
((4 * (((-2 * ((-1 - 7) * 2)) * 6) * ((8 + -4) * -4))) * (2 - 2)),-0
"((((0 / -4) + (((9 - 8) / -3) * (power(8, 0) / 6))) + (-2 / -6)) * 1)",0.277777777778
"((-5 + power(9, -5)) * power((-7 - 9), ((-3 + 0) + (((0 + 0) + 0) + 0))))",0.00122069899046
((5 - ((-5 + (-2 - (4 * -8))) - (5 / (-6 * -2)))) / ((7 - -1) / -2)),4.89583333333
"(((-1 * power((-4 / -8), (1 + 5))) + (-8 + -1)) / power(((-1 / -1) + 3), -4))",-2308
"power((-3 - (4 + 0)), ((-1 + ((0 + 0) + (0 + ((0 + 0) + 0)))) + 0))",-0.142857142857
"((power((-6 - 5), 2) * (((-7 / ((4 + 2) + 2)) + 1) + (9 - -3))) + -2)",1465.125
(((-7 - (((-1 * 8) - (9 + -2)) + 4)) - 1) / (4 + (-9 - (3 - 1)))),-0.428571428571
"((3 - -8) + (power((-8 - (0 * (-6 + -3))), 6) * (-5 - (-7 - power(3, -3)))))",534008.037037
(((0 + (1 + (0 / 5))) * (3 * -8)) * ((-5 - -5) + ((6 * 2) * -7))),2016
"((power((5 + -6), ((5 + 0) + (0 + 0))) + 2) - ((8 / -6) - (-5 + -5)))",-7.66666666667
"((((2 - 6) - (-4 + (5 * power(-2, -2)))) / -7) * (0 + (8 + power(-8, 0))))",1.60714285714
"(power(-2, (1 + (((0 + 0) + 0) + ((0 + 0) + 0)))) * ((0 / -8) - 2))",4
"power((power(4, 2) + (-8 + 5)), (((-2 + (0 + 0)) + 0) + ((0 + 0) + 0)))",0.00591715976331
"(((((((7 - -7) + -4) * -4) * -2) + (-6 / (-7 * power(7, -2)))) / 9) - -2)",15.5555555556
"(power(power((3 / (1 - -5)), 1), (-4 + (0 + (0 + 0)))) - (-8 * (8 * 3)))",208
"(((power(-5, 3) - (-4 / (-2 + ((-6 + -9) / (-6 / 3))))) * (4 - 3)) / -2)",62.1363636364
"((-9 - (8 - (0 * -8))) * (power(((-8 / -7) + 8), (6 + 0)) / power(-3, 5)))",40863.3767352
(((-8 + -1) * ((3 * -2) * (6 + (4 * 0)))) + (((1 / -1) * 1) - -2)),325
"((-9 / -1) - (power(power(-6, 1), (((5 + (0 + 0)) + 0) + 0)) / (7 + 2)))",873
"((power((5 * (-8 - 6)), 2) / ((6 + ((-9 - -9) * -1)) + 7)) * (-1 - 3))",-1507.69230769
"(-9 + (((-4 + (-6 + 4)) / 1) - (((power(8, -5) + 5) * 9) + (-9 + -1))))",-50.0002746582
(((((-5 * -5) - ((-4 / -8) / -7)) - ((1 - -5) - -8)) * -7) + (5 - 8)),-80.5
((-9 / 9) / ((((-3 / -5) / (0 + 1)) + -6) / (5 / ((-7 + 8) * -6)))),-0.154320987654
"(-8 + (-3 * power((-7 * ((4 + (-5 - (4 / -8))) - power(4, 2))), (3 + -2))))",-354.5
"(((-3 * -4) + -9) * (6 + ((-6 - (-3 * 3)) - ((power(-6, -6) / -4) - -1))))",24.0000160751
"power((-8 + ((-6 / -7) + -5)), ((1 + (0 + 0)) + ((0 + 0) + (0 + 0))))",-12.1428571429
"power((-2 - -6), (((-2 + 0) + ((0 + 0) + ((0 + 0) + 0))) + (0 + 0)))",0.0625
"(((-5 + 6) - ((-8 + -2) + 5)) * power((power(-5, (0 + 0)) * -3), power(1, 0)))",-18
(((((-9 * 3) + 7) - (0 + 9)) / 6) + (((-6 - 7) + 2) + (9 + -2))),-8.83333333333
((((-4 + ((-4 - -5) - -2)) * ((-5 * 8) + -2)) * (-3 + -6)) / (-4 + -8)),31.5
(((9 - -8) - ((5 - 0) - (9 + -6))) * (((4 * -9) / (7 * -5)) * -2)),-30.8571428571
(((((5 - -5) - 5) - -2) + (-3 - -7)) - (9 + ((9 - -9) * (5 + -5)))),2
(4 * ((2 - (((9 - -7) + (1 * 1)) * (1 - (5 / -9)))) / (8 / -6))),73.3333333333
"(((-8 * -1) * (power((-4 + 8), (0 * (-4 + 6))) * 8)) * ((5 + 5) - 2))",512
"(0 + power(2, ((0 + ((0 + 0) + 0)) + ((0 + (0 + (0 + 0))) + 0))))",1
"power(((-7 / -6) + (-6 / 8)), (((-4 + ((0 + 0) + 0)) + (0 + 0)) + 0))",33.1776
"((8 + -2) + (((-1 - 6) - (-2 + -4)) / power((7 * 7), ((3 + 0) + 0))))",5.99999150014
((9 + (-2 - (0 / 1))) + ((((8 + 6) * -5) + (1 / -4)) / (9 * -1))),14.8055555556
((-6 + (-9 - -9)) - (((-5 - (-3 / -6)) - (-4 / 4)) / (7 * (6 - -6)))),-5.94642857143
"power(((5 - -2) - (((-7 + -2) - -9) * (power((-8 / -6), 2) + (-1 / -2)))), -1)",0.142857142857
"power(((7 * (5 * -1)) / (((-7 * -7) + -3) / (2 * -9))), ((-1 + 0) + 0))",0.0730158730159
"(power(-8, 5) / (4 - (((9 * -2) / 8) / (-9 - ((5 - (-8 / 9)) / -8)))))",-8790.3336339
"((7 / (-1 - power((1 / -4), 2))) + ((-2 + (-7 - 1)) * (-5 + (-6 / 8))))",50.9117647059
((9 + -2) * (((-1 * 4) - 8) * ((((-9 + -3) * 3) + -1) + (7 - -1)))),2436
"(power((((8 + -6) - 5) * 2), (-8 + 5)) + (3 + (6 / (5 + (-5 * 9)))))",2.84537037037
"((((9 * (5 + 2)) - -2) * (1 / -2)) * ((power((-1 * 1), 5) / -7) * 2))",-9.28571428571
(((-1 - -6) + (-6 * -9)) / (7 * (((6 + 6) + 2) * ((-6 * -2) + -1)))),0.0547309833024
(((((9 + (-5 + -3)) * ((0 / 1) / -8)) + 3) + -6) * (9 / (-6 / 5))),22.5
((-7 * 7) / (((-8 + (9 - 8)) - ((-7 - 7) * 2)) - (0 / (3 + -8)))),-2.33333333333
"((((4 + 2) / -8) - (-7 / (-2 / (-5 * power((-9 + 7), 2))))) - (2 * -9))",87.25
"(((2 - (-4 - -5)) * ((3 - -4) * -4)) * power(((-1 / 5) * -3), (-1 - 1)))",-77.7777777778
"((power(((5 / 8) + ((-3 / (-3 / 6)) - power(7, -5))), -1) * 1) / (8 - 2))",0.0251574586431
"(power((4 / 2), (((0 + 0) + 0) + ((((0 + 0) + 0) + 0) + 0))) * -6)",-6
"power((power(1, ((-1 + 0) + ((0 + 0) + (0 + 0)))) * power(-6, (3 + 0))), -3)",-9.92290301275e-08
((-6 / (((-5 - 8) * ((0 - (-1 + 2)) / (9 - 4))) + -7)) * (9 * 6)),73.6363636364
"((-6 - power((-3 - 9), (2 + ((0 + 0) + (0 + (0 + 0)))))) * (4 - 6))",300
"(-4 * ((3 * power((((-9 + 6) - (8 / 9)) * (9 - 1)), -1)) + (1 + -2)))",4.38571428571
"(power(((8 - 3) - (-9 / 7)), (9 - 3)) * (((6 + 7) - -2) / (6 / -5)))",-770970.626185
"(-9 * ((power(5, (-1 - 5)) + 5) * ((power(-2, (-3 + 0)) / (0 + 3)) / 2)))",0.937512
((8 - 6) - ((-5 + (((9 + 6) * -8) / ((8 + -2) * -3))) - (-3 * -9))),27.3333333333
"(((((5 * -8) / (7 * 1)) / (-3 / -2)) - 6) * (7 - power((-3 * 3), 1)))",-156.952380952
"((2 * -6) - (power(((-5 - -6) - ((-6 + 8) * 2)), (3 + (0 + 0))) + 3))",12
((1 - (((4 - -7) - ((5 / -7) - 5)) + 7)) - ((2 + -5) / (-3 * -2))),-22.2142857143
"power((((-3 - (-2 + -5)) + -3) + (power(9, 1) + -9)), ((1 + (0 + 0)) + 0))",1
"(-1 - ((7 * -5) * (power((7 - -3), (-5 - (-2 + power(-1, 4)))) - (0 / 6))))",-0.9965
"((((1 - (2 * -5)) / -4) * ((-7 + power(1, 1)) + power(5, -3))) / (3 * 3))",1.83088888889
"(((-5 - -2) + ((0 * 8) + -5)) * (((3 * 0) + 3) - power((-1 / -3), -2)))",48
"power((4 + ((1 - -4) - (-3 + (power(0, 2) * ((4 / 6) * 1))))), (-6 + 0))",3.3489797668e-07
"((8 + ((6 - power(-6, (-2 + 0))) * (5 + -5))) + (4 + (-5 * (1 * 9))))",-33
((((2 + -4) * ((7 + -3) - (2 - 8))) * ((-2 + 5) * (-5 / -2))) / -4),37.5
(((-4 + ((7 - (1 * -5)) + -7)) * (4 - 0)) + (3 * (-7 * (0 + -8)))),172
(((2 / 4) - 7) * ((-3 - (1 + 8)) / ((((5 - 5) - -3) - 9) - 9))),-5.2
"power((((power(-2, 4) * (-4 - -1)) / (8 + 9)) / power(-8, (-5 + 0))), (1 + 0))",92521.4117647
"(-9 * ((-6 + ((-4 - (-1 * -6)) + power(7, 5))) * (((4 + 7) * -5) - 5)))",9067140
"(power((2 * (8 / 6)), -5) / ((5 - ((4 * -1) - 5)) - power(-5, (-1 + 0))))",0.000522237428477
"(-3 / ((power((0 + 1), (-6 + 0)) / (-1 + 3)) + (power((5 + 6), 6) / -3)))",5.080269672e-06
"(((-3 + 2) * (power(1, 1) + -2)) / ((-2 / 9) + (((5 + 5) - -3) * -2)))",-0.0381355932203
"((power(-8, ((0 + 0) + (0 + 0))) - -5) - (((-5 / -5) / power(-8, -1)) * 1))",14
"(((-2 * (6 - -4)) / 3) + (((2 / 3) + 9) - power((-3 / -9), (9 + -7))))",2.88888888889
"(((-8 * -1) / (-7 / -1)) - ((-4 + power(4, 6)) * (power((-2 * -7), 2) / -6)))",133673.142857
"(power(5, 5) * power(((-9 - power(-6, 4)) + (-7 / 6)), (2 + ((0 + 0) + 0))))",5331473003.47
((((-6 - -7) * 2) / ((2 / -1) + 3)) / (2 + (((-7 + -4) * 3) / 4))),-0.32
((1 - -1) - ((8 + (((-2 / -6) * ((-5 - 4) * 2)) - (-3 / 4))) + -1)),0.25
((8 * (-1 - (7 - -2))) / ((-3 - (7 / 8)) - ((0 - (-6 / 4)) - 5))),213.333333333
((8 - (((2 / (-7 + ((2 * 7) - -9))) - -4) + 8)) * ((2 - 1) + 4)),-20.625
"(((power(-1, (-4 - -2)) * (-7 - (-2 + 6))) / -9) * ((-2 + 2) / (2 - 5)))",-0
(((0 / (4 / 1)) - 2) * ((((3 - 9) - -3) - 9) / (-7 - (9 - 9)))),-3.42857142857
"(((7 * (-9 - -4)) * power((-2 + power(-7, 1)), ((2 + 0) + 0))) / (-2 * 4))",354.375
"(((-9 + 2) - -3) * power(((-9 / ((1 - 0) * -4)) - (-5 + 6)), (9 - 3)))",-15.2587890625
"(1 - (((9 / -4) + 4) - power(((-6 + 9) * (power(-6, 4) - -4)), (2 + -1))))",3899.25
"((7 * (-6 + (1 * power(-1, 2)))) / (((2 + -7) * -2) * ((-1 + 5) + 5)))",-0.388888888889
"((-7 + (-2 * -2)) * (power((-4 * -6), (-2 + (0 + 0))) - (-7 + (0 / 6))))",-21.0052083333
"(((-7 / (-1 / 4)) + ((3 - -9) - 3)) - ((power(3, -1) + 0) - (-9 / 3)))",33.6666666667
"(((-6 * (-8 / (5 * (-4 / -4)))) / 1) + (4 - ((0 + 5) + power(-5, 0))))",7.6
"(((((2 + 2) + 5) - -5) / (-3 / -3)) + (power(-5, -6) - (-6 - power(3, -4))))",20.012409679
"(power(((-7 - 2) / ((2 + (6 / (-1 - -6))) + (6 - 6))), (-1 + 0)) * -9)",3.2
"((-7 - power(power((-6 * (2 * 6)), 4), -5)) - power(power(4, 0), (1 + (0 + 0))))",-8
"((0 - -1) - (((0 / -5) * 8) + ((-9 / ((8 * -7) - -6)) - power(-8, -2))))",0.835625
"((-9 * (2 * power((5 * (0 - 8)), power(-4, ((0 + 0) + (0 + 0)))))) - -9)",729
"(power((-5 * -9), ((-5 + ((0 + 0) + ((0 + 0) + 0))) + 0)) / (2 - -4))",9.03204683116e-10
"power(power(((-3 + -4) / ((-6 + 1) * 1)), -1), ((6 + 0) + (0 + (0 + 0))))",0.13281030863
"((((-6 / (power(2, 1) + 9)) + (-3 * 1)) * ((9 + -8) / -8)) * (7 + -4))",1.32954545455
"(power((((-1 / -1) - -5) + -3), ((2 + 0) + 0)) - ((-6 * (2 + -9)) * 3))",-117
(((-5 * 6) - 0) * (6 * (((3 + -3) * (8 * -8)) / (-1 + (-4 + 9))))),0
(8 + (((((-6 * (2 * -3)) / (7 * (0 - 5))) - -5) + (-7 + -8)) / -9)),9.2253968254
"(((-4 - (-3 - 0)) / ((-3 - (power(4, 4) * 8)) + -5)) * (power(-8, -3) / -7))",1.35709074486e-07
(((((6 * (2 * -7)) * 4) * (5 - -6)) - -1) - ((6 * 9) - (6 - -4))),-3739
"(((power(8, -6) - 7) + (-5 + 5)) - ((((-2 * -5) / 6) * 2) * (2 + 8)))",-40.3333295186
"(((4 / (5 / power(8, -3))) / (-2 / (2 - -4))) - ((-4 * 4) * (-3 * 6)))",-288.0046875
"((power((((-3 + 5) * 3) / -2), (7 + -4)) - (0 / -6)) * (5 + power(2, -5)))",-135.84375
"((-9 - (power((-6 * -1), ((6 * -7) * 0)) * ((-8 - -1) + (-2 + -1)))) + 9)",10
"((((6 / (1 / power(8, 2))) * ((1 / -2) * -3)) + (-8 / 4)) * (3 + -1))",1148
"power(((((9 / -4) + 5) + (-9 - -7)) + -3), (3 + (((0 + 0) + 0) + 0)))",-11.390625
"(-4 * (((5 + ((0 * 4) + (-7 - 8))) / -5) - (power(2, 0) + (-3 - 5))))",-36
"((power((-3 / 1), -2) * ((1 / ((1 + -7) / 8)) - 0)) + (8 / (-4 + -1)))",-1.74814814815
"((power(-2, ((1 + 0) + 0)) - power(-4, -4)) + power(7, (((5 + 0) + 0) + 0)))",16804.9960938
"((9 - 0) * power(((-3 / -4) - power((8 + -3), ((0 + 0) + 0))), (-4 - -3)))",-36
"power(7, (((2 + 0) + ((((0 + (0 + 0)) + 0) + 0) + (0 + 0))) + 0))",49
"((-7 / ((-2 / -8) - -6)) / ((-1 * 8) * (((8 / 2) * 4) - power(3, 2))))",0.02
"power((5 + ((4 + -2) + (((-2 * -4) / -1) * 4))), (((-6 - -7) * 0) + -2))",0.0016
"(power((-5 * 6), ((2 + 0) + 0)) / (power((-1 + -9), -6) + ((6 * -9) - -7)))",-19.1489365776
"((power((7 + -1), -6) - (1 - ((8 / -5) / 4))) / power((9 + (1 - -5)), -6))",-15946630.8594
"((((5 * -9) + ((3 + -3) * 8)) + (-5 - power((-9 - 4), (-6 + 0)))) + 1)",-49.0000002072
((((8 + -8) + (1 * -4)) * (4 + (5 / -2))) + (-2 - ((6 - 7) - 0))),-7
"(power(-5, 3) - power((power((-9 - 9), ((1 * -3) - power(-5, 0))) + (-8 + -1)), -4))",-125.000152416
"((9 * (power(9, 1) * 7)) + (-5 / (8 - power((5 - power(3, (0 + 0))), 1))))",565.75
"(((2 * ((-5 * (-3 + (-4 - 3))) - 3)) + (-3 - power(-1, 5))) + (-6 * 2))",80
"(2 + (3 / ((-8 + -9) / ((-8 / 5) - ((5 * power(1, -6)) * power(-1, -5))))))",1.4
"(((8 * 0) / -1) + ((((7 + (-1 - 4)) + power(1, -4)) / 9) * (6 / 9)))",0.222222222222
"((power((power(-6, 4) / -6), ((1 + 0) + 0)) * power(1, 0)) / (-5 + (6 / -8)))",37.5652173913
"(((3 * (-9 * -2)) * (power((-3 - 2), -5) * (-2 / 7))) * ((-2 / 7) + 8))",0.0380865306122
(((7 + (-3 * 7)) * -7) * ((((6 * (3 - 0)) * (-5 + 4)) - 2) - -2)),-1764
"((power(-3, 3) * 1) * ((3 / (6 / (1 - -9))) / (((3 - 3) - 2) + 8)))",-22.5
"((5 - 5) - (((9 - (8 / 4)) * (6 * -2)) / power(power((-3 * 9), -3), -1)))",-0.00426764212772
"((-1 + ((-3 * 1) + (power(2, 3) - -9))) * (-4 + ((1 * -3) - (-9 * 4))))",377
((0 + 9) - (((9 * (7 + -3)) + -2) - (((-2 * (0 - -6)) * -7) * -5))),-445
"power(((power(-1, 2) * (2 + -9)) * 3), (((-1 + 0) + (0 + 0)) + (0 + 0)))",-0.047619047619
"power(((-3 + power(6, -6)) + power(-4, (1 + (0 + 0)))), (4 + ((0 + 0) + 0)))",2400.97059341
"(power(((-8 / (-2 + 6)) - 5), -2) / (((power(3, 1) - 6) - 2) - (2 - -1)))",-0.00255102040816
"power(-7, (((5 + (0 + 0)) + (0 + 0)) + ((0 + 0) + ((0 + 0) + 0))))",-16807
"(9 * (((((7 / 1) - power(6, -4)) - (5 * 6)) - (-5 - 9)) - (0 + -4)))",-45.0069444444
"(-9 - (((8 + -4) * 6) + (power(((4 + 4) + (6 / -3)), (-4 + 0)) + 2)))",-35.0007716049
"power(-7, (((4 + (0 + 0)) + (0 + 0)) + ((0 + 0) + (0 + (0 + 0)))))",2401
"((((((-8 + 2) + 6) + -5) / -4) + (((-1 - 3) + -9) * power(-6, 2))) - 8)",-474.75
((8 / ((2 + (-5 * 1)) + (((3 / -6) + -5) + -2))) / ((3 * 9) - 8)),-0.0401002506266
"((1 - power(((0 * -4) / 3), ((2 + 0) + (0 + (0 + 0))))) * (-3 + -4))",-7
"((power(power((5 * -4), 6), -4) * 6) - (1 * (((9 + (-6 + 2)) + 1) / -5)))",1.2
"(power((4 + 6), ((2 + 0) + 0)) + (4 + power((power((-4 - -7), -4) - -8), 0)))",105
(((((-8 - (-6 * 8)) / 4) / (2 * 6)) * (-9 - (0 * -5))) + (6 / -4)),-9
"power(((power(9, ((0 + 0) + (0 + 0))) + -4) + (-3 * 0)), (2 + (0 + 0)))",9
"(((-9 * -6) / -8) / (power((9 + (8 * 6)), ((-4 / -2) - 5)) + (8 * -6)))",0.14062501582
"(((-2 - (6 / (-6 / -8))) - power(7, ((6 + 0) + 0))) - (4 / (-4 / 8)))",-117651
((0 - (-2 - -2)) - ((2 + 0) + ((((5 + 2) - 7) + 7) * (9 - -1)))),-72
"((power(power(-1, -1), (3 + -7)) + -2) * (power(3, (6 + -4)) + (3 - (-9 + -8))))",-29
"((0 * -4) + power(((-2 * (((-9 * 4) / 8) / 2)) - -5), (1 + (0 + 0))))",9.5
"(power(((5 + ((3 + 0) + 5)) / (3 * 6)), (1 + power(0, 3))) * power(3, 5))",175.5
"(((0 / (5 + 2)) * -9) + power(((6 + 8) * 4), ((0 + 0) + (0 + 0))))",1
((((1 / 1) * ((3 + 4) * 7)) + 1) - ((-2 / (3 * 3)) * (-3 * -6))),54
"((power((-6 * power(4, 1)), ((2 - 9) - -5)) - ((-2 / (-6 * 7)) + 7)) * -8)",56.3670634921
"((5 - power((0 - (3 + (power(-6, 1) * power(-6, 0)))), (6 + (0 + 0)))) * 0)",-0
"power((power((-6 - (8 / (-9 / -2))), ((6 + 0) + 0)) - (-8 / 8)), (-7 + 2))",1.88072056681e-27
(6 - (((9 - (-7 / -1)) * 7) + ((((8 + -8) + -6) + (3 - -5)) + 6))),-16
"(power(-8, power(-8, 0)) * (((-1 - (-7 + (0 - 3))) / -5) - (-4 - (3 - 5))))",-1.6
"(power((-4 + -8), 5) * ((power(6, -2) - (-1 - (-2 + -1))) * ((-9 * -5) * -5)))",-110419200
"((((2 / -7) * (9 / (7 - -1))) * (0 - 4)) - ((-3 + power(4, 5)) - 8))",-1011.71428571
(((((-6 - -3) + 5) + (0 / 3)) + (-8 + ((-5 - 1) * -2))) + (8 * -2)),-10
"((9 * (4 * 1)) - (((-4 - -4) * 8) * power((-7 * -7), ((0 + 0) + 0))))",36
"((-4 + -1) + power(4, ((0 + 0) + ((0 + 0) + (0 + ((0 + 0) + 0))))))",-4
"(((4 * -3) / ((power(-4, power(9, 0)) + ((-5 / 1) / -3)) - -4)) - (9 * -4))",28.8
"(((-2 - power(1, 0)) - (-6 + -5)) - ((-1 / 5) / ((-7 / (9 + -2)) / -1)))",8.2
"(((-6 + 0) - 1) / (power((-5 - -9), (1 + (-1 + (-4 - -5)))) + (-1 - -8)))",-0.636363636364
((((-9 * -5) + 5) * (3 + ((6 + 9) - (3 - ((-5 / 2) * -2))))) * -7),-7000
"(((8 - 5) + (-8 - -4)) + power(-5, ((1 + (0 + 0)) + (0 + (0 + 0)))))",-6
(((((-5 - -1) + (-6 * 7)) * (-9 + -7)) - 7) / (-3 - (-3 + (7 + -6)))),-729
(6 * (7 * ((-2 * ((-2 + -8) + ((-5 - 1) * -3))) - ((8 * 6) - 7)))),-2394
"((0 - (((1 + power(-1, (-1 + 0))) + (6 / 2)) - -6)) / (power(-7, -4) / 4))",-86436
"power(4, ((((2 + 0) + (0 + 0)) + ((0 + 0) + (0 + 0))) + (0 + 0)))",16
"power((9 * (2 - -4)), ((-4 + (0 + ((0 + 0) + 0))) + ((0 + 0) + 0)))",1.17604776447e-07
"power(((-2 * ((8 * 6) - power(-4, 6))) / (power(6, -2) - 6)), (-3 / (-9 + 6)))",-1355.60930233
"power((power(5, ((-3 + 0) + 0)) + -1), ((1 + (0 + 0)) + ((0 + 0) + 0)))",-0.992
"(((-2 / -3) - ((8 / 2) / ((-2 / 6) / 2))) / power((1 / -6), (-4 + 0)))",0.0190329218107
"((2 + -3) + ((6 * (((-8 / -1) + 2) * -7)) + power(power(7, 4), (-2 + 0))))",-420.999999827
"power((((7 + -4) + -3) - (power(((2 + 2) * (-5 + 3)), 0) / power(9, -2))), -3)",-1.88167642316e-06
"(((-9 + (-7 - -6)) * ((-5 - 8) - power(7, (0 + (0 + 0))))) + (-3 + -7))",130
"((1 * 7) + ((9 + (power(-4, -6) * power(2, 2))) / ((2 / (8 / -9)) * -3)))",8.33347800926
"(-4 - (power(((-4 * (-6 / -2)) * ((-3 - -8) * (-9 / (-4 + -6)))), -3) + 5))",-8.99999364934
"(((((8 + 1) / (3 + 1)) + (-1 * -3)) * (power(7, 4) + -3)) * (-6 - 1))",-88126.5
"((((7 * 6) + -8) + power(((-6 - 3) + (-3 + 7)), 5)) * ((-3 * -1) - -6))",-27819
"((power(-6, -5) + (((-7 + (4 * -2)) / 8) / power((power(7, 0) * 7), 2))) + -7)",-7.03839390695
"(((4 * 4) - ((-8 * (4 * 8)) + 0)) / ((power(power(7, 1), 4) - 8) - -2))",0.11356993737
"(power(((-4 + -3) * 7), 2) - ((-5 * 7) * ((3 * -8) + (6 + (8 * -3)))))",931
((((-2 * (1 - 8)) / (-2 * (4 - -7))) / ((1 - -8) - -1)) * (3 / 6)),-0.0318181818182
"power(((power(-1, 4) - -8) * 8), ((3 + 0) + (((0 + 0) + 0) + (0 + 0))))",373248
"((6 - (2 - 6)) + (((1 + (-9 - (9 * -2))) + 2) + (power(-5, 5) - 6)))",-3109
"(8 - (((1 * (power(-7, 4) - -7)) * (((6 * (4 - 9)) - 0) - -4)) + 2))",62614
"(((6 * -9) * (-2 + 0)) * ((((-6 * -9) * -5) * power(-5, 2)) - (-5 * -4)))",-731160
"((3 * 1) + ((power((-3 / -6), (-1 + 0)) - -3) + power(power((8 / 4), -1), 0)))",9
((7 - (6 * -7)) * (3 * ((-9 + (((-5 - -7) + 9) - 1)) / (-1 * -7)))),21
(((0 + ((-5 * (8 - 5)) - -5)) * (-1 + -1)) + ((8 * -9) - (-8 + -9))),-35
"((power(power(-2, 5), (1 + (0 + 0))) + (7 / ((8 * -1) * (-2 + -7)))) / -1)",31.9027777778
"(power(6, 0) + (power(-5, -6) * (-4 * ((-9 - ((4 - 0) + 9)) - (5 * -5)))))",0.999232
(((-1 - 0) * (-4 * -4)) * ((-5 - (((-3 / 1) * -7) * -1)) - (0 - 8))),-384
"((power(9, ((0 + 0) + 0)) - ((-4 - 2) / -5)) + ((4 - 5) * (-6 + -1)))",6.8
"(power(3, (0 * ((-8 * 1) * -5))) * ((-7 - 1) * ((-9 / (1 / -5)) + 0)))",-360
((((-5 - (4 - 7)) - -6) * (((1 - -1) * (-8 + -5)) * 2)) * (3 / 3)),-208
((((((-4 - 4) * -8) * -8) * -9) * 4) + ((-9 - 1) * ((6 * -2) / 8))),18447
"(((-9 - 5) + power(1, ((-4 - 2) - -6))) / (-9 / (power(8, (2 + 0)) * -6)))",-554.666666667
"(((((1 / -9) * (-5 + 6)) - -1) - (7 + 0)) / (power(-2, -1) * (-6 / 2)))",-4.07407407407
"(((6 - 5) * (((-2 - -3) * 0) / 2)) * (power(3, (-1 + 0)) + (7 / 6)))",0
"(((((5 + -2) * -1) + ((-1 + -1) - 2)) * (power(8, 6) * power(-7, 0))) - -8)",-1835000
"(((8 + 0) - (power(-6, 0) * -6)) + (((-4 / -4) + power(0, (4 + 0))) - -8))",23
"(power(8, 2) + power(((9 - (((-3 * 6) - (1 * -7)) - 0)) + -9), (2 - 3)))",64.0909090909
((4 - (8 * (-4 - 0))) / (((0 - 4) / (6 * ((-4 / -9) * 9))) / -2)),432
"((7 * (9 + 6)) + (power(1, (-5 + 6)) - (2 * (-5 * power(6, (1 + 1))))))",466
"power(8, (((((-1 + 0) + 0) + (((0 + 0) + 0) + 0)) + 0) + (0 + 0)))",0.125
"(((-4 - -8) / 2) - ((1 - -8) * (power(6, (-1 + 0)) + ((5 - 4) - -7))))",-71.5
((-2 * ((1 * 5) / 2)) * ((-4 + 4) - (7 / (9 * (-5 - (-6 / -7)))))),-0.663956639566
"((-3 / -8) + (power(((((-8 / 5) * -5) - (-8 / 9)) * (8 + -3)), 3) * -2))",-175582.615398
"(((-6 - 1) - (5 + -5)) - ((8 / 3) / power((6 - -1), (3 + (0 + 0)))))",-7.00777453839
"((power((3 + 9), 0) + ((4 * ((-9 / 5) - 8)) + (7 * (-7 - 3)))) + 0)",-108.2
"(power(((9 * 9) + (((-2 + -2) + 4) * -2)), ((-6 + 0) + 0)) * (-8 - 9))",-6.0192004745e-11
"(power(-2, (2 - -3)) / ((-8 - (-6 * -3)) + power((7 * (power(5, -5) - -5)), 5)))",-6.09075319506e-07
"(-4 - power(power(-8, -1), (5 + (0 + ((0 + 0) + (0 + (0 + (0 + 0))))))))",-3.99996948242
"(((-3 - -6) / (-9 + power(-9, 5))) + (((power(0, (6 + 0)) * 1) + -8) * 9))",-72.0000507975
((-6 + -5) * ((3 / 5) / (((((-7 - -7) - -4) - -1) + -2) * (-5 + -7)))),0.183333333333
"power(5, (((-6 + ((0 + (0 + 0)) + (((0 + 0) + 0) + 0))) + 0) + 0))",6.4e-05
"((-7 + power((((5 / (-7 / 8)) / 8) * 6), (-1 + (0 + 0)))) / (9 * -5))",0.160740740741
"(((-7 * (2 / 3)) * (-4 - (1 * -9))) + ((-8 - 4) - power(8, (0 + 0))))",-36.3333333333
"power((9 / 9), ((8 + ((-2 * 1) + (2 + -7))) * ((6 + 3) * (0 * 8))))",1
"((power((9 / -9), (4 + 0)) / -3) / ((6 - (-8 + 9)) / (7 - (-2 - -2))))",-0.466666666667
"(power(-5, -4) - (power(-8, (0 + (0 + 0))) / power(power((-5 / (8 - 0)), 0), -3)))",-0.9984
"(5 * ((0 + 5) / (((-7 - 2) * power(power(power(-9, -1), -6), 1)) - (-6 * -6))))",-5.22683961234e-06
"(((8 * 0) + (6 + (7 + (-4 - 2)))) + (power((6 * 3), 2) * (7 + -1)))",1951
"(((3 * 7) + (-4 + -4)) - ((3 + -8) + ((-7 + -9) + power(5, (6 * 0)))))",33
"((((1 / -4) / power(9, 0)) - ((-2 - 5) - -7)) + (7 - (-4 + power(-7, -4))))",10.7495835069
"(((-4 - (1 + 8)) * 0) * (-8 * power(7, ((-1 + ((0 + 0) + 0)) + 0))))",0
"(-2 * (((((1 * -6) * 6) - -9) + -7) * (((5 - -1) * power(3, 2)) * 6)))",22032
"(3 - power((((-5 * 8) - -6) - 9), ((((-1 + 0) + 0) + 0) + (0 + 0))))",3.02325581395
"((power(3, -1) - 8) + ((power(-5, (-4 + (0 + 0))) - -2) + ((3 * 3) * -5)))",-50.6650666667
"((((3 * (-2 - 5)) - -3) + power(-9, ((-6 + 0) + 0))) - ((9 - -9) + 1))",-36.9999981183
"power(1, (((-6 + 0) + (0 + (0 + 0))) + (((0 + 0) + 0) + (0 + 0))))",1
((((-3 + -1) * ((8 / ((-6 - -9) + 0)) * -3)) * (0 - 9)) - (5 - 2)),-291
"((8 * ((-2 - (power(power(3, 0), -2) * -5)) - 3)) / ((5 - -4) * (0 - 9)))",-0
"(power(7, -5) + (power((power(-2, (0 + 0)) - (-4 * -9)), (-5 + 0)) / (4 - -1)))",5.9495210329e-05
"(power(((((-1 + -1) + 9) + -2) + 0), (-1 + ((0 + (0 + 0)) + 0))) / 7)",0.0285714285714
"(((-7 + -7) + ((-2 * 7) + power(4, ((-3 + 0) + 0)))) / (7 + (-5 + 6)))",-3.498046875
"power((((4 - -3) - -7) / (-7 - (-3 - -5))), ((0 - 7) + ((0 + -7) / -1)))",1
"power(((((3 - (-3 - -2)) + -7) / 5) * -2), ((((1 + 0) + 0) + 0) + 0))",1.2
"(((-1 + -7) - power(0, ((1 + 0) + ((0 + (0 + 0)) + (0 + 0))))) * -9)",72
"(power((-2 * 4), ((1 + 0) + ((0 + 0) + (0 + 0)))) * (2 / (-1 / 5)))",80
(((((0 + (-3 / -8)) / 9) / (-5 / ((-8 + -7) - -5))) * (5 / -6)) - 1),-1.06944444444
"(((-7 + (-9 * -8)) - ((-2 - 5) * 8)) * (power(8, -3) + (-3 * (9 - 5))))",-1451.76367188
"(power(3, ((-1 + 0) + 0)) + power(power(4, ((0 + 0) + 0)), (0 + (0 + 0))))",1.33333333333
"((power(-5, (-4 + 0)) * (8 * (0 / 9))) / power(-2, ((4 + 0) + (0 + 0))))",0
"(-7 / (((4 / power(2, 6)) * (-4 + 6)) / power(4, ((0 + 0) + (0 + 0)))))",-56
"((3 * -6) - ((((2 - (1 - 7)) + 6) / power(7, (2 + 0))) - (-8 / 1)))",-26.2857142857
"((power(6, ((1 + 0) + 0)) * ((0 * 4) - 3)) * ((8 / power(1, 6)) - -6))",-252
"(-2 + ((3 - power(2, -2)) + (6 - ((-8 / 6) * ((-4 - (6 * 2)) / 9)))))",4.37962962963
"((power(-3, (4 + -5)) + (-8 / -2)) + (((-9 * 3) - (0 * -2)) + (4 + -2)))",-21.3333333333
"((-4 + (((-6 * -7) + (-1 + -6)) * ((7 - -9) * 6))) * (power(-7, 0) - -9))",33560
"((-9 - ((power((6 + 6), (-4 / -4)) - (-1 * 6)) - -6)) + ((-5 * 6) - -9))",-54
((((3 + -5) - -6) / -1) / ((-5 * -5) * ((-5 + ((5 + -4) * -3)) - 9))),0.00941176470588
"power((-6 / -9), (2 + ((0 + ((0 + (0 + 0)) + 0)) + (0 + (0 + 0)))))",0.444444444444
"(-2 - (((7 / -3) / 7) + (((1 * (power((-9 - 3), 4) * 5)) * 8) - 2)))",-829439.666667
"(((power(-7, -6) * power(4, -3)) - (3 + (4 + -7))) / (-4 - (-4 / (-3 / -8))))",1.99215462945e-08
"(power(7, -6) / ((power((5 - -3), 6) * (-3 * (power(4, 3) * -3))) * (-3 / -4)))",7.50564623966e-14
"(-5 / power(-7, (((-5 + 0) + 0) + ((0 + (0 + 0)) + (0 + (0 + 0))))))",84035
"((((-3 - -2) * (-1 / (power((-5 - (8 - 9)), -5) - -4))) * 8) + (6 * -8))",-45.9995115995
"power(power((-4 / -4), 6), (((3 + (0 + 0)) + ((0 + 0) + 0)) + (0 + 0)))",1
((-9 - ((7 - 7) / -6)) + (((-3 + -7) + ((2 / 8) / -6)) + (1 + 9))),-9.04166666667
"(power(-9, (3 + (0 + (0 + 0)))) - (power(-1, (-1 * 0)) + ((0 - 7) / 3)))",-727.666666667
"(((-6 / 8) - (power((5 - (-1 * 0)), (5 + 0)) / -6)) / power((6 - -3), -1))",4680.75
"power((power(3, (-5 * -1)) + ((6 + -4) / (-9 - 0))), ((-2 + (0 + 0)) + 0))",1.69661044463e-05
"power(((-4 - -3) - power(-7, (-9 - (-1 + -4)))), (2 + ((0 + (0 + 0)) + 0)))",1.00083315972
"((-3 / ((power(6, -4) - 5) * -2)) / (((3 * (-9 + 0)) * 6) / (-7 + 9)))",0.00370427535113
"(((-9 + 3) - (((power(-7, -1) - (1 / 3)) * (-9 / -1)) * (-7 - 2))) + -1)",-45.5714285714
(((3 * (1 - 2)) * (9 - (-3 + 0))) - ((0 + 4) - (8 / (-6 * -9)))),-39.8518518519
"((power(5, (-6 + 0)) * ((-9 + (1 - -7)) + ((5 * (0 * 4)) + 6))) - -6)",6.00032
"power(-9, ((((-1 + 0) + 0) + (0 + (0 + 0))) + (((0 + 0) + 0) + 0)))",-0.111111111111
"(((((power(3, -4) - -6) + 0) * -9) - ((power(1, 6) * -4) + (6 * 7))) - 4)",-96.1111111111
"(((-1 / (-5 + -8)) - ((6 * (2 + 7)) + 3)) - ((-2 * -5) - power(-3, 4)))",14.0769230769
(((9 + 2) + (-6 + ((9 + -6) - 1))) / ((((-7 + 4) - -7) - 7) * 5)),-0.466666666667
"((power((power((-4 - -9), (((1 + 0) + 0) + 0)) - -3), -3) - -6) * (3 * -2))",-36.01171875
((8 - ((8 - -8) + (-3 * (2 * (7 - 6))))) / (((-6 - 7) / -8) + -8)),0.313725490196
"(power((3 - 0), 0) * power(1, ((5 + 2) - (((2 - -7) - -1) * power(-2, 0)))))",1
"power((power(1, 5) + 1), (-1 + ((0 + 0) + (0 + ((0 + (0 + 0)) + 0)))))",0.5
"((6 + (power(power(-7, 3), -4) + -9)) - power(power(((-4 / -1) * 9), (4 - -1)), 1))",-60466179
"(power((3 + 4), ((0 + (0 + 0)) + (((0 + 0) + (0 + 0)) + 0))) + -1)",0
"((power(-3, -1) + power(3, (5 + 0))) + (((-3 * -7) * (1 + -2)) - (4 * 0)))",221.666666667
"((4 * (power(8, (-2 - 2)) + -7)) + (((0 + (3 - -7)) + -7) * (-5 * 3)))",-72.9990234375
"((power(-3, (((6 + 0) + (0 + 0)) + (0 + (0 + 0)))) * (-4 / -7)) + 0)",416.571428571
"power((((7 * -2) + 9) + -3), (0 + ((((0 + 0) + 0) + 0) + (0 + 0))))",1
((-5 * ((2 / 8) * ((-8 * -8) + 1))) * ((-7 + -6) - ((-4 + -6) * -3))),3493.75
"((power((8 + 0), -2) + -7) - (5 / ((((-6 * 3) * (-2 + 8)) - 8) * 3)))",-6.97000718391
"((power((9 - -6), (-1 + 0)) * ((-8 * -8) - 7)) - ((-9 - power(7, 5)) / 6))",2806.46666667
"(((9 + (2 + (-1 * (1 * -8)))) + ((power(4, -1) * -9) + 8)) / (-6 - 2))",-3.09375
(((3 + (-2 / -5)) + -8) - (((-1 * (-5 + (-3 * 6))) + -4) - (-6 - 1))),-30.6
((((-1 + -2) * 5) + ((0 - 7) * (3 * -5))) * (((-9 * -7) + -4) / -9)),-590
"((3 - -5) - power(((-2 / (9 - 3)) / (-9 - -7)), (4 - power(power(-2, -6), 5))))",7.99922839506
"(power((-1 / -6), -4) - ((2 * power((7 - 9), -5)) * ((4 + (0 - -7)) * -5)))",1292.5625
"power(((((1 + 3) + -7) - -2) * (1 / -2)), (((3 + 0) + (0 + 0)) + 0))",0.125
"((9 + (8 + 7)) * (power((-6 - 1), 1) - ((5 - (-2 + -7)) - (4 * 6))))",72
"(power((-7 * (4 * 9)), (-2 + 0)) - (((-9 + -6) + -9) / ((-6 - 9) - -9)))",-3.99998425296
"((((5 * 4) * ((((-1 - -1) * 2) - 6) / -5)) * (9 + -8)) - power(0, 6))",24
(((((9 - -2) / (-1 - (-6 / -4))) / (-5 - 7)) * -6) + ((3 - -1) + -8)),-6.2
((((3 - (((-6 + 0) / -7) + 6)) + 5) - 8) * ((-3 * (-8 / 8)) * -4)),82.2857142857
"(((7 + 2) / ((1 / 2) / 1)) / (6 + (((0 - 8) / -2) / power(2, 4))))",2.88
((5 - (8 - (-6 + -2))) - (4 + (((-7 * 1) * (3 + (3 * 2))) / 2))),16.5
"((5 * 9) + (power(power(-8, 0), 1) * (-5 + ((-1 / (-6 + (-9 + 0))) - -1))))",41.0666666667
(-4 * (((1 * 6) + -8) + (4 * (-3 * (-5 / (((3 + 6) * -3) / -2)))))),-9.77777777778
"(((power(9, 6) / -5) / (-1 / power(-1, 3))) - (-5 - (3 * ((4 / 2) * -5))))",-106313.2
"(((1 - 6) - (-7 - 4)) + ((((-4 / (power(-2, 5) + -7)) / 8) - -7) - 6))",7.01282051282
"(((power(1, 1) * -7) * (-3 / -3)) + power(((-4 - 9) / -2), ((0 + 0) + 0)))",-6
"(3 + ((power((-4 - -1), (-7 + (5 + 7))) * (5 / -7)) - (8 + (2 / 6))))",168.238095238
"((power((-7 * 6), (5 + 0)) * ((-1 * (-5 - -5)) * -3)) * ((-4 + 3) * 7))",0
"((power(8, -5) * -2) + power(power(((4 - -3) * -4), 4), (5 / (-8 - (-7 * 1)))))",-6.103515625e-05
"((0 - 1) + power((-7 - -9), power(((-3 * -6) * 7), ((-6 + (0 + 0)) + 0))))",1.73194791842e-13
"((power(-3, 3) + 5) / power((-7 / -2), (((0 + 0) + (0 + 0)) + (0 + 0))))",-22
"power((((6 - power(1, -2)) - -4) - -8), (((0 + (0 + 0)) + (0 + 0)) + 0))",1
"((-3 + (power((-5 / (6 + 3)), -5) - -6)) + power(((2 - 1) * (-8 * -8)), 4))",16777200.1043
"(((-4 + 2) + (((-8 * -3) - (-4 - (3 - (2 - -3)))) - power(4, -1))) + 7)",30.75
"(power((7 * 7), (3 * 0)) * ((-7 / (4 - power((-4 * -4), -3))) - power(3, 5)))",-244.750106818
"(((0 + 7) * (5 + (7 / 6))) + (((-8 - 3) + (9 * power(-4, -6))) * 7))",-33.817952474
"power((-3 - (6 - (-2 * -2))), ((1 + 0) + ((0 + 0) + (0 + (0 + 0)))))",-5
"(-5 + ((3 + 6) * ((5 - -6) + power(power(-1, 3), power(((-4 * -8) * -6), 0)))))",85
((((-6 / -4) - (-6 * -4)) + 0) - ((-6 * ((-2 - 4) / -5)) + (1 / -6))),-15.1333333333
"(((-6 / -7) + power(-4, -6)) + ((-6 - 5) + ((-3 + 6) - ((-8 + 2) - 1))))",-0.142613002232
"(power(((-3 - 7) / -2), (-6 + 0)) - power(-9, (1 + (((0 + 0) + 0) + 0))))",9.000064
"(-8 + power(((1 + -8) + (((9 * 1) + 2) * -7)), (((-6 + 0) + 0) + 0)))",-8
((6 - 7) + (((((-8 * 7) + -1) - (((9 - 9) / 4) + 3)) + 3) + 6)),-52
"((-5 - (-5 + 0)) / (-8 + power(((-6 - 0) + power((-2 / 1), (-4 + 0))), 1)))",-0
"((power(-9, (-4 / 1)) + power((6 - 5), -1)) + (((6 * 9) / 6) * power(2, 0)))",10.0001524158
"((2 * -3) - (((-3 * -8) / (((-4 + 7) * -2) - power(-9, 4))) / (4 - 6)))",-6.00182731841
((-5 / -7) / (((((2 - (-3 + 1)) + ((-1 / 2) / -9)) - -5) * -5) / 8)),-0.12620508326
"((power((((-8 / -9) / -5) - (-5 * 4)), -3) * (8 * -7)) - (9 - (0 - -8)))",-1.00719003501
"power(((3 - ((1 / (-6 / 8)) + (-2 / (-7 / -9)))) - (-6 - (-6 - 3))), -5)",0.00110160833126
"(((0 * 1) * (power(8, (-3 + 0)) - 0)) * (((2 - 8) * (7 - 6)) / 5))",-0
((((-4 - -5) + (0 + (-9 - -4))) / (-9 / 6)) * (1 + (8 - (0 + 3)))),16
"(power((((-4 + -1) - 8) + (-5 / 2)), (-3 + 0)) + power(-8, (2 + (0 + 0))))",63.9997314625
"(power(((1 + (5 * 4)) - 1), (((-6 + 0) + 0) + 0)) * (0 - (3 * -1)))",4.6875e-08
"power(((((-8 * (2 + 6)) + -9) - 8) + (7 / (1 * (3 * 9)))), (-5 + 0))",-2.91431406824e-10
"((((-7 - (-6 / -2)) / (7 + power(9, -6))) / ((7 + -5) / -6)) / (-1 + -6))",-0.612244733381
"power((power(power(-7, -3), 3) * power(4, (-1 + ((0 + (0 + (0 + 0))) + 0)))), 1)",-6.19523305562e-09
"((1 - (4 + 8)) / ((power(-2, -5) + (1 * -2)) / ((-2 * -1) + (-6 - -3))))",-5.41538461538
"power((6 * power(0, 1)), ((2 + (0 + 0)) + (((0 + 0) + (0 + 0)) + 0)))",0
"(power(((1 * (6 / 5)) - ((0 - 3) + -3)), ((0 + (0 + 0)) + 0)) + -2)",-1
"((0 * -1) + ((((-9 + 7) + 5) - power(6, ((0 + 0) + 0))) / (2 - 0)))",1
"power(power((-9 / 7), 6), (((((2 + (0 + (0 + 0))) + 0) + 0) + 0) + 0))",20.4048606448
"power(((((4 * (7 - 5)) / -4) - 6) - ((-2 / -8) / -4)), ((-2 + 0) + 0))",0.0158720317441
"(((power((2 + 6), (0 + 0)) - ((3 + 6) - 2)) * -7) + ((6 / -5) * 9))",31.2
"power((power(9, -6) - power((6 + (-7 / -1)), (-6 + (0 + (0 + (0 + 0)))))), 0)",1
"((((0 / -2) * 9) * (7 - 4)) + ((2 + power((-5 - 1), 0)) + (8 + -2)))",9
"((power(((6 * 6) - (6 - -6)), 2) + (-7 / 1)) * ((-7 + -3) * power(-8, 6)))",-1491599360
"((8 + (-4 * 9)) / (((-9 / 9) / (power(-4, -2) * -4)) * (-1 + (-4 * -8))))",-0.225806451613
"(((3 * (power(4, 4) - -2)) * ((-6 + (0 * 8)) * -4)) * (-2 - (-2 * -4)))",-185760
(((7 * 1) * (1 - (-6 * 5))) - ((0 * -8) + (-6 / (-4 - (-8 + -5))))),217.666666667
((((-5 + (8 - 5)) * 5) * ((6 + -5) * (2 + 8))) - ((-4 - -6) * 0)),-100
"((-1 / 4) + ((((0 + 3) * -4) - power(-1, (((5 * 0) + 3) - 9))) + -5))",-18.25
"((power((power(-3, 1) - (-2 - 3)), 0) + (-8 - (-7 + 1))) + (5 + (0 + 2)))",6
"(power((5 - (5 - -9)), (-4 + 0)) * (((-9 * (2 + -3)) + (-5 * 5)) + -9))",-0.0038103947569
"power((((-2 + 1) / (power(-3, (-6 + 1)) + 8)) + power(-2, (-6 + 0))), (-6 + 0))",582048.752892
"((4 * (-6 - -9)) / (((-8 / 8) - (power(5, 4) - (-8 * -7))) / (7 - 2)))",-0.105263157895
"(((((7 / (9 - 8)) + (0 - -6)) + power(1, -6)) + -2) / (4 / (0 + 7)))",21
"(((3 / 9) + 8) - (power(power(-6, 1), 6) / (power((5 / -2), -6) / (-9 - 0))))",102515633.333
"((power((-5 / -6), -3) + (power(3, (2 + 0)) - (-5 * -3))) * ((-4 / -9) + -3))",10.9173333333
((((-6 + 5) - (-4 / (-9 * -5))) - ((-3 + 8) + 4)) - ((0 - 3) + 6)),-12.9111111111
"((((9 - (9 - (2 * -7))) - (power(9, 3) * 2)) + (-5 - 1)) / (-4 / -4))",-1478
"(((9 * -1) + ((-9 - 7) * ((1 * -6) * -2))) + (power(4, -3) / (-1 + -7)))",-201.001953125
"(power((((2 / -1) + (4 - -2)) + 0), (3 + ((0 + 0) + 0))) - (-9 + 9))",64
"(power(7, -5) + (power(-9, 0) / ((-7 / -6) * ((-7 - 4) * (7 + (-6 + 2))))))",-0.0259145269558
(-2 / (((-9 * -6) * (((6 * 8) - (4 - -6)) - (7 + 2))) / (-9 / -1))),-0.0114942528736
"(-4 + ((0 + (4 + (-9 - 8))) + ((((-5 + 7) / -6) * power(2, -5)) * -4)))",-16.9583333333
"((1 - (power(1, 6) - power((-1 / -9), -6))) + (power((-6 + 2), 0) * (3 - -3)))",531447
"(((-4 + 5) + -2) - power(power(3, 1), (2 + (((0 + 0) + (0 + 0)) + 0))))",-10
"(((-1 * (0 / 5)) + -5) - power(power(6, (-2 + 0)), (1 + (0 + (0 + 0)))))",-5.02777777778
"(((power(-8, ((-5 + 0) + 0)) * (5 - 1)) + -9) - ((7 * -1) * (-9 / 4)))",-24.7501220703
"((power(((9 + -6) + 2), (3 + 0)) * 2) / ((-3 / 9) + power(8, (5 + -6))))",-1200
(((-3 * ((-5 + (-7 - 4)) + ((0 + -9) * (5 - 4)))) + (-4 * 0)) + 9),84
"(3 - (4 * ((power(-4, ((0 + 0) + 0)) / power((1 * 7), -3)) + (-8 + 3))))",-1349
((-1 - 0) - ((((8 * -5) * -8) + (4 * -4)) * ((1 + -5) * (-7 + 3)))),-4865
"((8 - 5) + (((9 - (9 + (7 - (0 * 0)))) * power(-2, 4)) / (6 * -5)))",6.73333333333
"(((2 - (power(3, 6) * 7)) + -1) - ((-3 * ((6 * -1) / (-8 - -4))) / 3))",-5100.5
((9 - ((-7 * -5) * -2)) + ((1 * (9 * -9)) + (7 * (0 * (-1 + 4))))),-2
"power(((-3 * -2) + ((6 - -3) + (5 + (-5 * power((8 - -1), -4))))), (-4 + 0))",6.25095268944e-06
"((6 / power(-3, -1)) - (-6 / power(((6 - 8) * 1), power(power(-9, 0), (1 + 4)))))",-21
"power(((6 / power(2, -6)) / (3 - ((-5 * 3) + -9))), (2 - (-4 + (9 - 6))))",2876.75171468
"power(-3, ((1 + ((0 + 0) + (0 + 0))) + ((0 + 0) + ((0 + 0) + 0))))",-3
"power((-5 + (9 * 4)), (((-2 + 0) + (0 + ((0 + 0) + 0))) + (0 + 0)))",0.00104058272633
"power(power(8, ((3 + 0) + (0 + (0 + 0)))), ((-9 - (-8 + power(1, -5))) - -4))",262144
"((power(-2, -3) * -4) - power(power((-7 * power(-5, -2)), -4), ((-2 + 0) + (0 + 0))))",0.4999622198
(((2 * (-5 * -1)) * 9) / (((2 + -4) + (9 + -2)) * (2 - (5 / -3)))),4.90909090909
"(power(power(3, -5), (((4 + 0) + 0) + (0 + 0))) * ((-6 * -3) - (7 * -5)))",1.52002515512e-08
((((-8 + -4) * (7 * (-1 + 3))) + (-5 - -4)) - ((0 + -1) - (-7 - 4))),-179
"(((-4 / 5) + 8) * ((((3 - (-4 - power(6, -3))) - -9) - 6) - (-9 - 7)))",187.233333333
"power(((1 * (3 + -8)) * -6), ((((-5 + 0) + 0) + 0) + (0 + (0 + 0))))",4.11522633745e-08
"(((9 + -8) / power(9, ((((-1 + 0) + 0) + 0) + 0))) / ((-6 * -1) - -3))",1
"((power(-5, (-1 + 0)) * (8 / 5)) - ((3 * 4) - power((-5 + 9), (0 / 5))))",-11.32
"(((7 / -6) + (4 * (9 - -9))) * ((-9 - 4) + (-5 * power(-8, (1 + 0)))))",1912.5
"(power((7 + (((-8 * 3) - (7 / -9)) * -2)), (3 + ((0 + 0) + 0))) * -5)",-763269.142661
"((-8 / (power((9 + -4), power(-1, 4)) - 0)) * power(((-6 - -1) * 3), (-1 + 0)))",0.106666666667
"(power(-3, ((-2 + 0) + ((0 + 0) + ((0 + 0) + 0)))) - (5 - (2 - 5)))",-7.88888888889
((7 * (5 - 7)) * (((((3 / -4) / (1 + (1 + -6))) * -9) * -1) + -9)),102.375
((3 * ((1 + -2) + (8 - -7))) * (-9 - (((-4 / 1) / (3 - -7)) + 3))),-487.2
"(power((-2 - power(-3, 1)), -6) - ((-1 + ((5 + -6) + -4)) / power((-1 - -7), 3)))",1.02777777778
"(-5 * ((((-3 * 2) * power(8, 2)) + -8) * power(((-8 * power(-2, 2)) + -5), -2)))",1.43170197224
"((((9 / 9) + 2) * 6) / (power(7, (-1 + (0 + 0))) - (4 - (-3 * -6))))",1.27272727273
(-7 / (-4 - ((4 + (-7 - 1)) * (((-9 - 7) / ((-9 / 9) - 9)) * 3)))),-0.460526315789
"(power((-7 * -7), (-3 / -3)) / ((-4 + 7) - (power(-8, ((0 + 0) + 0)) + -1)))",16.3333333333
"power(((-9 * ((7 - -3) + -7)) / (7 + (-9 - (6 - 9)))), (0 - (-7 / -7)))",-0.037037037037
"power((power(9, power(-1, (-1 + 0))) / (((4 - -9) * 6) - (7 + -4))), (2 + 0))",2.19478737997e-06
"(7 + ((-3 / 2) / ((1 + (power(1, -5) * power((-6 * -6), 3))) + power(9, -3))))",6.99996785048
((-4 / ((5 / ((-1 + -9) * 5)) - ((-4 + 9) + 8))) + ((4 * -8) - 1)),-32.6946564885
"((power(power(2, 3), (-3 + ((0 + 0) + 0))) / (-3 - (9 + 6))) + (-7 / 9))",-0.777886284722
"(((8 - 0) + (5 * -9)) * power((-5 - (9 - ((-8 / 6) - 5))), (6 + 0)))",-2614888684.99
"(((-7 / 7) - (((-9 + (-1 * -8)) / (-6 / -4)) / -5)) - power(-1, (-5 - -5)))",-2.13333333333
"(-6 * ((power(-5, -1) + power(((-5 / (8 - -7)) - 5), ((-2 + 0) + 0))) - 6))",36.9890625
"((power(-9, (0 + 0)) - (-2 * ((7 * 9) / -3))) * ((2 - (-8 + 0)) + 5))",-615
"(-4 / ((((-9 - 2) / 7) - (4 * ((-7 - 6) - 7))) - power((-7 * 2), 2)))",0.0340218712029
"(4 - ((power(power(-6, ((1 + 0) + 0)), (4 + 0)) + (6 / 4)) / (-7 * -7)))",-22.4795918367
"((((8 + ((-3 * 4) - 7)) + ((-9 / -7) + power((8 + -5), 6))) / -9) - 7)",-86.9206349206
"((-8 / power(5, (1 + (0 + (0 + 0))))) * ((0 + -9) + ((3 + 8) / -7)))",16.9142857143
"(((1 / (-1 + (-9 * (-3 - -7)))) + ((9 + 5) - power(6, 5))) * (8 + 6))",-108668.378378
(((-4 - -7) / (-4 * (6 - -2))) / ((((-1 * -9) / -4) + -4) + (9 / 4))),0.0234375
"(((((8 - 2) - 4) * ((3 + -2) + (-4 + -5))) * 1) / power(7, (-5 + 0)))",-268912
"((((-7 * (-6 * 2)) - (-3 + -6)) / ((0 * 5) + -4)) - power((-5 + -3), -3))",-23.248046875
"(((-4 * 1) - 1) * (-8 * ((power(((-4 * 3) + 9), (3 + -2)) * -6) - 4)))",560
"((4 * 1) + ((((power(1, -6) + 3) + (-8 * (-9 / -9))) - (-4 + -4)) - 5))",3
"power(((9 - ((-6 - (6 + 8)) + (((-4 * 1) + 0) + (-9 - -1)))) + -5), 6)",2176782336
"(power(2, 2) + (-9 * ((3 * (-7 * 1)) - (((-1 - -9) - 5) / (1 - 7)))))",188.5
"power(((-4 - 1) + 8), (((-1 + (0 + (0 + 0))) + 0) + (0 + (0 + 0))))",0.333333333333
(((-5 - -4) - (-2 * 3)) + ((((2 + 6) - 4) / (-2 / 9)) + (7 - -5))),-1
"(((3 * 3) - ((6 / 2) + 9)) - (power(5, 2) / ((power(2, 4) * 5) - -9)))",-3.2808988764
((-1 + ((7 / -8) + (4 * 3))) - (((-4 + 9) * (0 * 3)) * (1 * -7))),10.125
((5 - ((-5 * 0) - (-1 * 9))) - (((-9 + 3) - (-3 + -8)) + (-2 - 2))),-5
"((((5 / -1) * ((((-5 - -9) / 1) - (8 * 0)) * 9)) + power(-3, 2)) / 4)",-42.75
"(((-2 / (7 + -3)) * (power(-9, 1) - (8 / -2))) * (((6 - 4) * 9) - -2))",50
"power(((7 + 3) / power((-8 + 1), -2)), (2 + ((0 + 0) + ((0 + 0) + 0))))",240100
((3 + -8) + (((((-3 * -7) - (1 * 2)) + -7) * -8) + (-2 + (2 * -2)))),-107
"power(((-3 - (((-1 * -1) - 7) - 1)) - (power(4, -1) * (0 * -4))), (7 - 4))",64
"(8 + ((power(8, 6) + 0) + (((-1 + (-8 / 1)) + 9) * power((5 + -1), 5))))",262152
"(((-4 + (7 / -5)) * -9) / power((-2 * ((-9 + -1) - -5)), (5 + (0 + 0))))",0.000486
"(((7 * -2) - power(((9 * -6) / (-5 + ((-5 - -6) - -2))), -5)) / (3 + 4))",-2.00000000996
"((((9 * 5) - (power(-2, -1) * 3)) - (9 - (5 - (3 / (9 * 8))))) * -8)",-339.666666667
(-3 * ((-9 / -1) / ((((5 + -1) * -3) + -6) * (((-4 - 6) - 7) * 8)))),-0.0110294117647
"((-6 / power((power(-3, 5) / 5), -3)) - ((-4 - (9 + (-5 - 3))) * (-5 - 3)))",688707.536
((5 - (((6 - -8) - -9) - (-7 * 5))) + ((7 + 5) - (1 + (-8 - 6)))),-28
"(power((3 / power(-4, -6)), ((8 * 3) * (-9 - -9))) - ((-8 + power(-1, 4)) - -7))",1
"((2 * 7) + ((power(-3, 4) + (6 * -4)) * ((-6 + 9) - (-7 * (4 * -4)))))",-6199
"(4 * (-6 - ((((-4 * 9) / power(-8, -2)) / (((-3 / -6) * -2) - 3)) - -7)))",-2356
"(power(((-3 + ((-8 * 9) - (7 * -1))) - power(1, -6)), (1 + 0)) + power(7, 4))",2332
"power((2 - 0), ((0 + (0 + 0)) + ((0 + 0) + (0 + (0 + (0 + 0))))))",1
"power(power(((-5 / 3) - -1), ((-5 + 0) + 0)), (((-3 + (0 + 0)) + 0) + 0))",-0.00228365826052
"((power(-9, 3) / 7) * ((-4 / (4 + -8)) / ((power(-9, (2 + 0)) * 6) + 7)))",-0.211243117937
"((((9 / 8) * 4) + (4 + (-5 * -7))) / power(((2 - 6) + (6 * 8)), -4))",163042176
"(((-8 + 8) - (power(0, 1) + (5 * power(-9, 6)))) * ((1 - -7) + (9 / -7)))",-17841233.5714
((6 * 3) / (((5 + ((8 - -2) + 7)) / 6) + (((-9 - 8) + 1) * -1))),0.915254237288
"((2 * 8) / power((7 + -5), (((0 + 0) + 0) + (0 + ((0 + 0) + 0)))))",16
"(-4 + power((-6 * ((0 - ((-7 + 9) * 1)) * -7)), ((3 + 0) + (0 + 0))))",-592708
((((-7 / 8) * -9) + (3 * 2)) / (((1 * -6) + (-4 - -9)) * (-6 / -4))),-9.25
"(((2 / (5 / 7)) * 2) * (power(((-3 * -2) - 6), 1) * (8 + (-1 + 3))))",0
"(((5 - 5) * power(((-3 + 1) + -2), (5 + 0))) * (-5 - (-5 + (7 / -8))))",-0
"(power((7 + 5), -5) * (4 + power((-4 + power((1 / (-7 - -2)), -4)), (1 + 0))))",0.0025117348251
"((7 / 2) / ((((6 * 2) - 0) - ((1 + 3) * power(-8, 1))) * (6 * -3)))",-0.00441919191919
(((-7 * -8) / 6) - (-7 / (-8 / ((9 + (5 + 6)) + (-4 - (1 + 8)))))),3.20833333333
"power(-4, (((((-4 + 0) + 0) + 0) + (0 + 0)) + ((0 + 0) + (0 + 0))))",0.00390625
"((5 + -8) - (((5 - 5) * 0) * ((9 + -6) + (-7 - (4 - power(-2, -6))))))",-3
((-9 / (6 - 3)) / ((((((-6 * 2) * 3) - 5) - 4) - -4) + (5 * -1))),0.0652173913043
"(((8 - power(2, (-2 + (0 + 0)))) * power((5 * -3), (-2 + (0 + 0)))) + 6)",6.03444444444
"((((-9 / -2) + (-1 / 7)) - ((9 + -1) / power(-5, 0))) / (-8 + (-6 - 0)))",0.260204081633
"power((((-2 + 9) + power(power(-5, (1 + 0)), -4)) * (-8 + (-9 - 3))), (6 / 2))",-2745882.03011
"((6 * (-7 * (3 * 6))) * (((-7 - -7) * -2) * power(8, (-1 + (0 + 0)))))",0
"(((1 - -6) + (power(9, 4) / 9)) * ((7 * power(-9, (-6 + 0))) * (4 * 8)))",0.310220701828
"power(((9 + -5) / (3 + (5 + -4))), ((-5 + (0 + (0 + (0 + 0)))) + 0))",1
"(((8 - 2) + (-3 / -7)) - power(power(5, -4), (((0 + 4) * -2) + (8 + 0))))",5.42857142857
"(-7 + (power(((-5 * 1) + power(-2, (-3 + 0))), (0 + (0 + 0))) + (9 + -9)))",-6
"(((power(9, -3) + (6 - -3)) / (((-5 + 5) + 3) - 2)) - power(power(4, -3), -5))",-1073741815
"((((1 + -4) - (0 / (power(-1, -6) * -5))) * (0 + -2)) + (3 / (2 * -5)))",5.7
"((-6 - (((-5 / -6) * ((4 + (-8 + -7)) + 5)) - power(1, 2))) * power(-9, 1))",-0
"power((power(-2, 0) + power(-6, 3)), (((-5 + ((0 + 0) + 0)) + (0 + 0)) + 0))",-2.17674572609e-12
"(power((((7 - 4) / 1) / power(-9, -1)), -3) - (power(-3, -2) + ((7 * -8) * -2)))",-112.111161916
"((-5 / power((8 + 9), (3 + 0))) / power(((-9 / ((6 - -4) / -4)) + -8), -3))",0.0866924486057
"(0 + (power((-6 / -6), (((-3 + (-8 + 3)) + 9) * 3)) + (1 - (8 * 1))))",-6
"(power(3, (6 / power(1, 0))) + (((-2 / 3) + -8) - ((7 - 9) / (3 - 0))))",721
(((-6 / (-4 * -6)) * ((2 * 8) * (9 - -7))) * ((-2 * (-2 - 9)) + -4)),-1152
"((-2 / power((0 * 5), (1 + (0 + -1)))) - power(power(-7, power(-7, (-6 + 6))), 5))",16805
"((7 + (8 * (5 / power(8, -3)))) * ((1 / -1) / power((-4 * -4), (-1 * -1))))",-1280.4375
"((3 - ((6 * ((-4 + 4) - (-1 / 9))) + -5)) + power(((7 - 2) + 0), 4))",632.333333333
"(-7 + (power(((1 + (4 * 3)) - -9), (0 + 0)) * (((-7 + 2) - 9) / 2)))",-14
"(power((9 * -7), (((5 + (0 + 0)) + (0 + 0)) + 0)) / ((-4 / 3) / -9))",-6698946665.25
"(((2 + (-2 + 9)) + (8 + -7)) * (power((7 - -8), (1 + (0 + 0))) / 6))",25
"(power((4 - -4), (-6 + ((0 + 0) + 0))) + ((4 + 3) * ((5 - -3) + -8)))",3.81469726562e-06
"(7 + ((5 * ((4 / power(7, -3)) + (-1 - -6))) + (power(5, 6) / power(5, 4))))",6917
"((2 / (7 * 8)) + ((((-5 - power(3, 0)) + -7) - -2) + (-8 - (2 / -5))))",-18.5642857143
"(((power(-1, 2) * 4) + ((-8 - 0) + -4)) + power((-9 * 1), (2 + (0 + 0))))",73
"(power(2, (-5 + (0 + 0))) + (((-1 - -6) + (-5 + 2)) * ((-6 / -9) - 8)))",-14.6354166667
(((-8 / -1) - ((9 - 6) / ((3 + -9) - (2 + -2)))) - (-4 - (-7 - 7))),-1.5
"((power(9, -2) - (5 + 5)) * (3 - power((0 - -1), ((0 / -7) + (5 - 7)))))",-19.975308642
"(((((-4 * 8) * (-3 * ((-7 - -4) + -2))) + -3) + (4 + power(-3, -1))) - -1)",-478.333333333
"(3 + (((-1 * 3) + ((-5 - (0 * 3)) + ((2 + -3) + -6))) * power(7, 2)))",-732
"((4 + ((4 + ((9 - -4) + power(4, 6))) * 8)) + (8 + power((-3 * 2), 3)))",32700
"((-2 + (-4 / -2)) + ((-2 / 9) + ((1 * (5 * -2)) + (power(-9, 6) * 7))))",3720076.77778
"power(((((3 * (-3 + 9)) + (2 - 5)) + (-8 + 5)) + power(-7, 4)), (3 + -4))",0.000414421881475
"(power(power((7 + 6), 4), (((-5 + (0 + 0)) + 0) + 0)) * (7 - (8 + 1)))",-1.05235664939e-22
(((-1 / (-9 / 1)) + -1) * (1 * ((-1 * (-6 / 8)) / (1 + (-8 - 7))))),0.047619047619
"(((power((1 / 8), ((-2 + 0) + 0)) + 4) * power(5, ((-6 + 0) + 0))) - 1)",-0.995648
"((power(7, (((-5 + 0) + (0 + 0)) + 0)) + ((4 * -9) / 3)) - (-1 * -8))",-19.999940501
"(power((-7 + 2), -6) * (-5 - power((((-9 - 2) - 9) - 4), ((2 - -9) + -5))))",-12230.590784
"(((-2 + 0) / (power(4, -5) / (2 - -1))) + power(-9, ((-5 + 0) + (0 + 0))))",-6144.00001694
"power(((6 + 2) + ((-7 + -2) / (9 + 8))), ((1 + 0) + ((0 + 0) + 0)))",7.47058823529
"(2 - (power(9, (3 + 0)) + (((-9 + -9) * (-5 * (power(9, 2) * 7))) + 2)))",-51759
(((5 - -9) * 0) + (-1 - (-8 + ((9 - 1) * ((0 + -8) + (-6 * -3)))))),-73
((((5 * 7) + ((7 / -6) - -2)) / ((-1 * 3) * -3)) * ((-6 - 7) + -3)),-63.7037037037
(((((0 - (0 - -7)) - ((-3 + -1) - -5)) - -1) / (-9 / (7 * 1))) - 5),0.444444444444
"(-5 * power(((-7 / 4) - (8 / 2)), ((0 + 0) + (0 + ((0 + 0) + 0)))))",-5
"((6 + -2) / power(-3, ((((5 + 0) + 0) + 0) + (0 + (0 + (0 + 0))))))",-0.0164609053498
(((((6 / 6) * -8) / ((-8 + -9) - -1)) - (-6 / ((-8 + -8) - 9))) - 5),-4.74
"power(((-8 - -4) - -2), (((((1 + (0 + 0)) + 0) + 0) + 0) + (0 + 0)))",-2
(((-1 / (-7 / (9 + 3))) + 5) - ((0 / 5) * ((2 * -3) + (-6 + 7)))),6.71428571429
"power(6, (((1 + (0 + 0)) + (0 + (0 + (0 + 0)))) + ((0 + 0) + 0)))",6
"(power(power(-8, -3), 3) * ((9 * (power((7 - 2), (5 + (0 + 0))) * 7)) * 6))",-0.00880099833012
"((8 * 5) / (power((7 / -6), (-3 + 0)) * ((power(2, (6 + 0)) + 0) - 8)))",-1.13425925926
(((-3 + 5) + (0 / ((((2 * (9 - -4)) * (-4 * -8)) + -9) - -6))) - -1),3
"(((((power(-6, 2) * ((3 - -6) * 9)) / 1) - (0 - -7)) / 2) * (-4 / 3))",-1939.33333333
(((((-1 + -4) - -3) + -6) * ((-5 / 6) + ((6 + 2) - 6))) * (0 + -5)),46.6666666667
"((((3 - 5) * (9 - -2)) * ((power(-9, -6) / -1) / -6)) - (0 + (-5 + -4)))",8.99999310052
"((1 * -2) * power((((-4 + 7) - 5) / (8 * (4 * (-8 - 7)))), (5 + 0)))",-2.5117348251e-12
"((2 * (-5 * ((4 + (-5 / power(6, -6))) / (8 - -3)))) - power(7, (5 - 5)))",212068.090909
"((((2 - (1 * -4)) * 7) - 3) - (((7 - 4) * -7) / (power(5, -4) + 7)))",41.9993144424
"((((-9 + -8) - (-6 - (power(-5, 3) / 4))) - ((8 / 3) * power(-5, -5))) - 0)",-42.2491466667
"((((-9 / -1) + 8) * (power((3 * 5), (-1 + 0)) - (-4 / (-2 * 6)))) * 9)",-40.8
"(-9 - ((-8 + -4) - (((6 - 1) + power(-9, (-2 + (0 + 0)))) * (-2 / -9))))",4.11385459534
"(((((-5 + -4) + (-5 + 7)) / (-6 / 7)) * power(power(4, -3), -6)) * (-5 + 4))",-561209060011
"(power(-3, (-5 + ((0 + 0) + ((0 + 0) + 0)))) * power(3, (-5 + (1 - -2))))",-0.000457247370828
"power(((-7 - -2) - (-8 / 5)), ((((0 + 0) + (0 + 0)) + (0 + 0)) + 0))",1
"(2 + (((((power((6 - 9), -3) * -7) - -9) - -6) * (-1 + 1)) / power(6, 3)))",2
"power((3 * 7), (((1 + 0) + 0) + (0 + (((0 + (0 + 0)) + 0) + 0))))",21
"(power(-5, 5) - power(-6, ((0 + (0 + 0)) + (((0 + (0 + 0)) + 0) + 0))))",-3126
"(((((1 - (7 - 2)) + ((power(-9, 5) * -8) + 2)) / (1 / 1)) + 4) / -8)",-59049.25
"(((((power(-5, 3) * ((5 * 9) - 7)) + power(9, -1)) + -2) - (1 * -1)) * 7)",-33256.2222222
"(((power(-6, (-2 + 0)) / ((-4 + -5) / -5)) / 9) * ((-3 * 0) + (-9 / 6)))",-0.00257201646091
(((4 * (-4 - (-1 * -8))) - (((-7 - 1) - (-9 * -9)) - -7)) + (-1 + 9)),42
"((5 + ((2 * power(4, 2)) / (-3 * (-5 + 6)))) * (9 + (-2 * (-7 * 6))))",-527
(((((((-3 + -3) + 0) + -1) - -5) / 5) - -3) / (((4 - -6) - 3) + -9)),-1.3
"((7 / power(-5, (-2 + (0 + 0)))) - ((5 * (-4 * (6 - (-8 + 1)))) / -6))",131.666666667
"((((8 + (7 * 7)) - power(-6, -2)) - (((-9 + -1) / 7) + 1)) - (-7 / -1))",50.4007936508
(((-6 / 6) * (-7 * (-5 / (-1 * (2 + 2))))) / ((1 / 1) / (-6 + 3))),-26.25
((((-6 / -5) + 6) - (7 / 5)) / ((0 * (6 * 5)) + (2 * (8 + 1)))),0.322222222222
"(((power(4, 6) * -6) + ((((9 - 3) * -7) - 8) + (3 - (5 + -1)))) - -8)",-24619
"power(((-3 / (power(9, 4) * -6)) + (8 / 3)), ((4 + (0 + 0)) + (0 + 0)))",50.5736819923
"((-6 * power(-1, 2)) * (((5 - 1) / (-4 + -8)) / (power((-5 - -8), -2) + 1)))",1.8
"(-2 + (((8 / -1) * 4) - ((5 * (6 * (8 / 3))) - power(6, (-6 * 1)))))",-113.999978567
"((power(6, -1) - ((8 * 0) / (-3 + (4 - (3 * 2))))) + (-1 + power(9, 3)))",728.166666667
"((((-1 * (2 - 5)) / ((2 * 6) * power(-9, -3))) / -7) + power(0, (-4 - -9)))",26.0357142857
"(((5 / 7) + (((9 + -3) - 3) - -6)) - power((-1 - (-8 - 3)), (0 + 0)))",8.71428571429
((4 - (1 * 1)) / ((((7 - ((-9 - -6) - -7)) - 4) + -3) + (-8 - 2))),-0.214285714286
"power((-7 - (2 + 7)), (((-1 + (((0 + 0) + 0) + (0 + 0))) + 0) + 0))",-0.0625
"((((-2 * -1) * (-9 + 8)) - (2 / 1)) * ((8 * -4) - power(5, (-2 + 2))))",132
"(((-4 / 6) + ((-5 * (-3 * 7)) - -8)) / (-6 * (-7 - (power(9, 4) - 5))))",0.00285269270489
"((1 * (0 / -4)) + power(((0 - 1) * (1 * (3 * (-2 / -7)))), (7 + -7)))",1
"power(((-4 / (-6 - (-5 * 8))) + 3), (((0 + 0) + (0 + (0 + 0))) + 0))",1
"((-1 + -2) / (9 * (((-4 * power(6, -5)) + ((-7 - 4) + (3 * 4))) - -9)))",-0.0333350480992
"power(-9, (((1 + 0) + ((0 + (0 + 0)) + 0)) + (0 + ((0 + 0) + 0))))",-9
"((power((power((-4 * -4), 2) - (-9 + -7)), -3) - ((-6 - 3) * (2 + -2))) - -3)",3.00000004969
((-6 * ((-7 - 5) + (0 * 1))) - (((-4 + 8) * (3 * 8)) - (7 + 6))),-11
"((((-5 * power((-2 * -8), -6)) + -1) * (power(power(3, -3), 4) * (2 / -9))) * -3)",-1.25445132263e-06
(-8 * (((((-7 * (-1 - 4)) + -6) * -1) * 5) - (-1 * ((5 * 5) / -2)))),1260
"power((3 + -8), (((-4 + 0) + ((0 + 0) + 0)) + (0 + ((0 + 0) + 0))))",0.0016
"(power((-9 - (4 * (8 - (8 + -2)))), (2 + ((-7 * -1) + -7))) + (7 / 2))",292.5
"(((power(((0 / (4 + 4)) - -9), 6) - 7) * 8) / ((-5 + 3) / (-8 - 0)))",17005888
"power((((((-1 + 6) / 1) + -5) + (-6 - ((-8 + 3) * -9))) * (5 - 4)), -5)",-2.89833859146e-09
((((-1 / 8) - (-3 / -9)) * -5) + ((2 / 5) + (((-9 * 3) - -8) / 2))),-6.80833333333
"((((power(-7, -3) - -2) - ((-8 + -2) + -4)) + -9) * ((-3 - -7) * (7 + -6)))",27.9883381924
"power((-5 + 8), ((-1 + (((0 + 0) + 0) + (0 + 0))) + (0 + (0 + 0))))",0.333333333333
"power(((4 - 7) / ((9 * -2) / (8 + ((6 + (8 * 1)) - 9)))), (1 + 0))",2.16666666667
"power(power((9 + -9), 3), ((3 * 4) * (power(-5, (power(6, 3) * 0)) / (5 + -2))))",0
"(power((9 * (2 * 9)), 4) - ((-9 * (0 * (4 + -3))) / (power(-3, -6) + 9)))",688747536
"(((8 + 2) - ((5 * 7) - 4)) / power((((-9 + -2) / -9) / 2), (5 + 0)))",-246.38734314
"((8 - ((8 * (7 - 2)) * 4)) - power(((((-1 / -2) + -3) * 8) - -9), 2))",-273
((4 * (0 - 0)) / ((((0 - 2) * (0 / 5)) + (-2 * (2 - 0))) - 6)),-0
"(power(power(2, -2), 0) - power(((((-9 + -3) - 5) + ((5 + 8) * 9)) - 5), 4))",-81450624
"(((8 * (-1 - -4)) - power((((-4 + 0) + (6 * -6)) * -7), (2 + 0))) - 2)",-78378
(((6 - (4 - 8)) / ((-9 + 5) + ((-3 - -5) / (2 - -4)))) / (9 / -2)),0.606060606061
"((9 - power((4 * (-1 + 2)), 3)) * power((0 * 9), ((3 + 0) + (0 + 0))))",-0
"(power(4, 6) * (-6 - (-3 - (((-9 / power(-7, 4)) * (1 / -5)) - power(7, 3)))))",-1417212.92928
"power((((-8 / -1) * 8) + (-4 + 6)), ((-5 + 0) + ((0 + 0) + (0 + 0))))",7.98509931918e-10
(((-2 / (-6 / -6)) - ((7 + -4) * ((2 * 9) * (-5 / -9)))) - (-9 + 8)),-31
"(2 / power((power((-7 * (power(2, (-7 / 7)) / 8)), (-5 + 0)) - 6), (3 - 5)))",9354.17700065
"power(((-6 * (-6 / -7)) * power(power(-9, 5), -3)), (-5 + ((-4 - -6) - (5 - 9))))",2.49785267123e-14
"((5 - ((power(-9, -2) * 2) * -6)) / (power(2, 6) * ((-3 * 4) - (5 * 8))))",-0.00154691951567
"((-1 * -6) / power(3, (((2 + 0) + (0 + 0)) + (((0 + 0) + 0) + 0))))",0.666666666667
"((-4 - 2) - ((5 * (-4 * (-9 * 6))) * power((-9 * -4), (2 - (2 - 4)))))",-1813985286
"(((power(-3, (1 + (0 + 0))) + power(5, -2)) - -1) - power((-2 - (-9 - 8)), 6))",-11390626.96
"power((((-6 + 7) - 8) * (6 * (6 / 1))), (3 + ((0 + (0 + 0)) + 0)))",-16003008
"(((-6 - 3) * ((-3 * power(9, (-1 + 0))) + 5)) + ((1 + -9) - (-5 / -2)))",-52.5
"((-5 * (0 + (1 * (-8 * 5)))) * (-6 * power(((-7 - power(7, -1)) - -9), -5)))",-54.3193650298
"power(-1, ((2 + (0 + (0 + 0))) + (((0 + 0) + 0) + (0 + (0 + 0)))))",1
"((3 * (-5 + -4)) - (((-9 + 1) / power(((-8 * 0) + 4), -6)) + (0 - -6)))",32735
"power((power((3 - -3), -4) * 4), (((0 + 0) + (0 + (0 + (0 + 0)))) + 0))",1
((-4 + (((8 - 2) + (-3 / (-4 / 7))) - (-5 - (0 / (2 * 2))))) * 8),98
(((1 - (-9 + 6)) * -3) / (((-5 / 5) / (4 / -6)) * (1 - (5 / 4)))),32
"(((-7 - power(2, -3)) / ((-7 - power(-5, -1)) + 4)) + (0 * (power(0, 6) + -8)))",2.54464285714
"power((-7 + (-7 * ((0 - 7) * -5))), ((0 + (0 + 0)) + ((0 + 0) + 0)))",1
"(((0 + (-1 - -5)) - (-5 + 1)) * (power(power(-6, 0), 1) + ((0 - 5) + 3)))",-8
"((((9 / 7) - 6) * -5) + (9 / ((power((7 + -8), 0) + 0) + power(6, -3))))",32.5299539171
"(((power(-5, 4) / power((5 - 6), -3)) / (-8 - -5)) * (7 / ((7 - 1) - -2)))",182.291666667
"((-7 - ((1 / 4) * power(-2, -1))) - ((((7 + (2 * -1)) - 3) / -7) * 9))",-4.30357142857
"((8 + 9) * ((((-9 + 6) - -6) / (power(-8, -1) + 9)) - power((-8 - -3), 1)))",90.7464788732
"power(((power((-9 - (-7 / 4)), -4) * (1 * 7)) * (6 + 3)), ((-3 * -1) + 2))",6.16513535379e-09
"power(((-1 * (-6 + (4 + 4))) * (3 * -8)), (-1 + (0 + ((0 + 0) + 0))))",0.0208333333333
"(power(power(-5, 4), ((((-6 + 0) + 0) + 0) + (0 + (0 + 0)))) / (-1 - -5))",4.194304e-18
"(power(1, (((-2 + 0) + 0) + ((0 + (0 + 0)) + (0 + 0)))) - power(-9, -4))",0.99984758421
(((2 - 4) * 6) * ((-1 / (-2 + (0 + ((9 * 1) - 5)))) - (-3 * 8))),-282
"(((-5 * 7) + -7) - (((-3 + 5) + ((-6 + power(4, 1)) - 4)) - power(-6, -5)))",-38.0001286008
"(power((((-6 * 4) / 5) - ((-1 * 0) * (7 / -3))), (5 - 5)) / (-5 * 5))",-0.04
"(((((-2 * -4) * 2) * (8 - (-8 - (5 - 4)))) - 9) + (power(7, 1) - 2))",268
"((((0 - 1) + (7 + (-9 - 6))) - power(-2, -2)) - ((5 + 5) + power(5, 0)))",-20.25
"(power(-1, (((-4 + 0) + 0) + (0 + 0))) - ((((-4 - 5) - -4) - 6) - -9))",3
"(9 + power(((2 + -7) - ((-9 + -4) - (-9 * ((6 * 8) / (-5 + 8))))), -3))",8.99999960246
"((5 * (8 - -3)) - (2 - ((-4 + 8) * ((power((-9 * -9), -2) / -5) * -9))))",53.0010973937
"(power((-6 + (8 - 0)), 3) / (((-5 + (3 * 9)) / power(-3, 0)) * (-7 + -3)))",-0.0363636363636
"(power((-6 - 5), (-4 + (0 + (0 + 0)))) / ((1 * -9) + (2 * (2 * 0))))",-7.58903839295e-06
"power((8 / ((-5 + (2 + ((1 * (power((6 / 6), -6) * -1)) - -2))) - 8)), 4)",0.4096
"((-8 - (-5 + 6)) + power(((power(power(2, (6 + 0)), 2) * -5) - 0), (-3 + 0)))",-9
"(-8 * (((-1 / -4) / ((-1 + (-5 - 3)) + (3 - power(7, 4)))) / (-3 - 5)))",-0.000103863730785
(((9 + 5) / ((2 - 0) - 5)) + ((-8 / -3) + ((4 + (-7 - 5)) - 4))),-14
"((1 + 1) * (((8 / -1) + (power(-2, (-5 + 0)) - (power(8, -5) - 5))) - 3))",-12.0625610352
"(power(-2, -6) * (((-3 * (-1 + -8)) * power((2 - 9), (7 * (0 / 7)))) + -3))",0.375
"power(-9, ((3 + (0 + 0)) + (0 + (((0 + 0) + (0 + (0 + 0))) + 0))))",-729
"(((4 + 9) * (power(2, 3) * (power(-1, -5) + 8))) * ((-9 / (-8 / 6)) - -4))",7826
"(power((3 - -9), (((-8 + -9) - (-7 * 6)) * 0)) + ((9 / 7) - (-1 - 0)))",3.28571428571
"((-7 - 1) * (-1 - power((-4 * 5), (((-4 + 0) + 0) + (0 + (0 + 0))))))",8.00005
"(((-6 * 5) / -5) * (power(((-3 - -6) - -2), (1 + (0 + 0))) + (-6 * 9)))",-294
"((6 - (-6 - power((-4 - 8), 1))) / ((5 / -5) / ((power(7, 1) * 3) * -7)))",0
"power((9 / (power(6, -1) * ((0 + (6 / (-3 / 5))) * -3))), ((0 + 0) + 0))",1
"power((((power(9, ((1 + 0) + 0)) + 3) + (-4 + -7)) / -4), ((-1 - -5) + -8))",256
"((power(8, -6) * (-6 - -7)) - ((((1 / -6) - -9) / (9 - 1)) + (0 + 9)))",-10.104162852
(-9 + (((-4 - 1) - ((8 + (-6 - -7)) + -2)) / (((9 + 3) * -8) / 8))),-8
"power(((((-1 * 5) / -3) / ((9 - -5) / ((8 + -1) / (-3 - 4)))) * -7), -3)",1.728
"((((-7 / 8) - 7) + -9) - ((-4 + power((-6 / -7), 2)) - (3 * power(8, -3))))",-13.6038345026
"((-3 + ((4 + 5) / 9)) * (power((5 + -1), -6) * ((-5 + 3) - (0 * -6))))",0.0009765625
"power((1 / 5), (((((1 + 0) + 0) + (0 + 0)) + 0) + ((0 + 0) + 0)))",0.2
(((-7 - ((-2 + -5) + 6)) * ((0 - (-3 * -1)) / (5 - 4))) + (-4 - -4)),18
"power((power(2, ((-5 + 0) + (0 + 0))) + (-2 - -7)), ((9 * 1) - (3 * 3)))",1
"power((power(3, -1) * (((-1 * (-7 - -4)) * -8) * power((-6 * 3), 3))), (-1 - 4))",4.52337390708e-24
"(power(-5, ((6 + (0 + 0)) + (0 + 0))) + power(-5, ((-1 + 0) + (0 + 0))))",15624.8
"power(((((-2 + 4) * 9) - -9) - -9), ((-4 + (0 + 0)) + ((0 + 0) + 0)))",5.95374180765e-07
"((((-2 * ((3 / (-2 + 4)) * power(9, (4 + 0)))) * -9) + (9 - -8)) * 2)",354328
"(((0 / ((2 / ((0 / -3) - 2)) / -3)) - (-1 / 8)) * (-2 * power(3, 5)))",-60.75
((((0 * (-8 - -1)) + 1) * -6) + (((7 / 5) + (-8 - (-4 + 9))) / -3)),-2.13333333333
"(((0 + (-2 / -1)) * 0) * ((-4 * -5) - (power(power(-1, (0 + 0)), 5) * 8)))",0
"power(((((-3 * ((9 * -6) / (-3 - 1))) - (6 - 1)) / (-8 * 7)) + -2), 6)",2.80415302515
"power((power(3, ((2 + (0 + 0)) + 0)) * (((8 + 6) + 8) - (-6 * 9))), 1)",684
"power(((2 * -9) * ((9 + -6) / -3)), ((-1 + (0 + (0 + 0))) + (0 + 0)))",0.0555555555556
"((((-9 * 4) / (-5 * -4)) * ((3 + -8) / -3)) * ((8 * -9) - power(5, -3)))",216.024
"((5 / power(power(-2, -6), -5)) + (((-2 + -5) + power(3, 6)) - (2 - power(1, 6))))",721.000000005
"(power(((3 + 7) + 5), (-3 / 1)) / power((7 + (7 * 4)), ((0 / -3) * 5)))",0.000296296296296
"((((-5 * -4) / 9) / power((1 + 1), (-2 + 2))) + ((-1 - -1) * (-7 - 1)))",2.22222222222
"(9 + ((((5 / 9) / 4) / -4) - power(2, ((-1 + (0 + (0 + 0))) + 0))))",8.46527777778
(((-8 * ((8 + -5) / (8 + 2))) + (4 * (-4 / 2))) + (0 + (1 * 2))),-8.4
"power((7 * -3), ((6 / (power(-5, ((0 * 9) - 0)) * -6)) * (-4 - (1 / -1))))",-9261
"(power(((8 / 6) * 8), ((2 + (0 + 0)) + ((0 + 0) + 0))) * (1 - 7))",-682.666666667
"power((9 / -5), ((((6 + (0 + (0 + 0))) + 0) + (0 + (0 + 0))) + 0))",34.012224
"((((-8 - power((1 + 2), 5)) / (7 * -3)) * (7 - 4)) / (9 * (-5 * -7)))",0.113832199546
"power(((-1 * -7) + ((5 / (6 / 5)) + ((1 + 6) / 4))), ((0 + 0) + 0))",1
"power((6 + (((power(2, 4) / -1) - (-2 - -6)) + (7 + -8))), (1 + (0 + 0)))",-15
((-6 / ((-5 * 5) * ((2 + 8) - -2))) - ((8 - 1) + (-2 - (-5 - 4)))),-13.98
"(power((((-2 * 8) * -4) * -9), (2 + 0)) * ((2 + -8) * ((9 - -6) * -3)))",89579520
(2 - (((-9 * -2) * ((6 + ((-3 + -9) * 1)) + -7)) / ((9 - 1) - -4))),21.5
"(((0 - ((7 / 6) / power(power(4, 2), (-1 + (0 + 0))))) - (-2 - -1)) / -7)",2.52380952381
"((1 - 9) - ((0 + (power(-2, -2) + (-7 / ((3 + 4) * -6)))) - (-6 - -8)))",-6.41666666667
(-3 - (((((-7 - 3) - 2) - (7 / 1)) + (2 + 8)) / (-7 / (1 - 7)))),4.71428571429
"(power(3, (-2 - 0)) / (((-7 / 1) / (-1 / -8)) + (((-2 / -2) * 8) / -4)))",-0.00191570881226
"power(((7 / power(5, 3)) - ((7 * ((5 + (4 + -1)) - power(4, -3))) - -8)), 0)",1
"(-3 - ((-1 * (((4 - -4) - -8) / 2)) + (power(5, (2 + (0 + 0))) + -4)))",-16
"((3 + power(-3, 3)) / ((-6 - (1 + (-4 * 4))) - ((-5 - -8) * (1 * 6))))",2.66666666667
(((-8 / -5) + -7) - (((-5 / -4) + (((3 + 8) + 7) - (2 + -6))) * 4)),-98.4
"((power(power((-9 + -1), -1), (-1 + 0)) + (3 * power(-6, -1))) / ((8 - -2) - 3))",-1.5
"(((9 * -3) - (power(7, -1) * (5 + 6))) - (((4 - 6) / -3) * (6 / 4)))",-29.5714285714
"(((1 + -7) - (7 - 0)) - power((2 - -8), ((-6 + (0 + 0)) + (0 + 0))))",-13.000001
"(power((((2 * 5) * 1) + (0 + power(-3, ((3 + 0) + 0)))), (-5 + 0)) * 4)",-2.81718511089e-06
"((9 * -9) - ((power(-5, -4) * ((-2 - 1) * (-6 * 7))) * power(4, (1 + 0))))",-81.8064
"(power(((0 + -8) + (-1 + (1 - 3))), -3) + ((-1 + -6) - ((-2 * -4) + -6)))",-9.0007513148
"(((-1 + -4) / -1) * power((-1 - 8), (0 + (0 + (0 + (0 + (0 + 0)))))))",5
(((-1 * (0 - 0)) - (0 + -9)) + (-2 - (-1 - (((6 / 7) - -7) + -6)))),9.85714285714
"((((power(-1, 1) + (-2 * -5)) + -5) + ((7 * (2 + 2)) / 1)) - (7 - -4))",21
((((9 / -7) / 7) / ((-8 - 4) + -2)) - (2 + ((-7 + 4) - (4 * 0)))),1.01311953353
"power((-2 - (5 + (-8 / -6))), (((2 + 0) + ((0 + 0) + 0)) + (0 + 0)))",69.4444444444
"(((-1 * 8) + (-1 + 3)) - ((8 - power((-7 * -7), (6 + 0))) - power(-3, 5)))",13841286944
((4 * 0) + ((((-6 + 5) * -1) / (-1 * -1)) * ((5 - 8) * (2 + 6)))),-24
"(power((-9 / 4), 6) * (power((-6 - 9), (4 / power(8, (0 + 0)))) - (-7 / -4)))",6568181.29962
"((power((power(-6, -5) / ((4 - 8) + -5)), 1) + (-6 + (-4 * 6))) / (1 * -2))",14.9999928555
"power(power(((6 + (0 / -1)) + (-8 - 2)), ((((-3 + 0) + 0) + 0) + 0)), -3)",-262144
"(power((-2 * 3), (5 - (6 + 0))) + ((6 * (6 - 3)) / (power(8, 3) * -2)))",-0.184244791667
"power((((-6 - 0) * (8 - -6)) + ((((-9 + -7) - 4) * (-6 - 1)) * 7)), -1)",0.00111607142857
"((-2 / ((-9 * (5 * power(-4, (-3 + 0)))) + -5)) * ((power(9, 4) * 6) / -8))",-2290.38545455
"((((5 - power((9 + -6), -4)) * 8) * power(6, ((-6 + 0) + 0))) * (5 * -2))",-0.00855221934326
"(((((1 - (-2 + -9)) + power(7, 5)) * 9) - ((9 / -9) + -6)) - (-6 * -3))",151360
"(((0 * 6) * (power((-9 / 7), (((-5 + 0) + 0) + 0)) - power(-7, -3))) * 6)",-0
"(power((-1 * -6), (-1 + 0)) / ((power(-7, 1) * (-4 * 4)) + ((8 - 7) - -2)))",0.00144927536232
"((power((7 - 6), ((((3 + 0) + 0) + 0) + 0)) * ((-7 + -6) + 1)) + -9)",-21
"(power(-6, -6) / power((-5 - power(7, -1)), ((-5 + ((0 + 0) + (0 + 0))) + 0)))",-0.077110727673
"((3 - ((((power(-5, -5) + -3) / -7) * (6 - -3)) * (-2 - -6))) * (1 - 4))",37.2906514286
"(((0 * power((-4 / -9), -1)) * (((4 * 7) + -5) + (-6 + 9))) + (7 + 4))",11
"(-4 - (power(2, ((-1 + (0 + 0)) + 0)) / (1 / (3 * ((5 / -7) - 7)))))",7.57142857143
"power((-6 + -3), (((2 + 0) + ((0 + (0 + 0)) + ((0 + 0) + 0))) + 0))",81
"(((2 - (power(1, -3) * -7)) * (4 - (1 * 6))) * ((9 - -8) + (2 * -6)))",-90
"((((-5 * (-3 + (-8 * 8))) / (9 - power(-8, -6))) + -3) / ((-4 + -1) - -1))",-8.55555949977
"(4 * (-2 - (((1 + (-2 - -4)) * (-5 + 8)) * power(-8, ((-2 + 0) + 0)))))",-8.5625
"((((0 + ((-2 - 4) - 2)) + power((0 - 3), 3)) / -3) * (-4 * (2 + -5)))",140
"(power(((((9 - -8) - 5) + power((2 - -9), 5)) * 6), (7 + (-8 + -2))) + 6)",6
"((7 * ((power(power(9, 1), (0 + 0)) - ((6 - -3) - -5)) / (2 * -7))) - 9)",-2.5
"(power(power((-6 - 5), 2), ((-1 + 0) + (0 + 0))) * ((0 / (-6 * 9)) + -4))",-0.0330578512397
((((-1 * 2) + 5) * ((-8 * -2) + 3)) * (9 + ((-9 + 6) - (-9 + -8)))),1311
"((power(2, -2) - (8 - -2)) + (-6 * (((1 * -9) - 6) / (-5 - power(-9, -2)))))",-27.7056650246
"((-1 / power(8, (-1 + 0))) / (((-7 * 4) * -7) * power(5, ((9 + -4) * 0))))",-0.0408163265306
"power((((power(9, (1 + 0)) / 1) / (9 / -3)) + power(-3, -1)), ((-1 + 0) + 0))",-0.3
"power(((-5 / 4) - ((-2 - -5) - ((3 * -4) + ((6 * 3) + 2)))), (-4 + 0))",0.00505679012346
(((-9 - (-4 + (4 - 1))) / ((8 + ((-1 / 5) * 6)) * (-1 * 9))) / -8),-0.016339869281
"((8 / (9 - -1)) + (-4 / (((power(3, -4) - 7) / (-9 + 8)) * (-9 * -6))))",0.789399293286
((((-5 / (4 - 5)) - -7) * (0 - (5 - (-1 * 0)))) - (7 * (9 * -5))),255
"((((5 - (0 + -4)) * 8) / ((-3 + -3) * (4 * (power(-1, 6) * 2)))) - -7)",5.5
"((power((((-9 + 8) - 6) * 1), -4) - ((-3 + -3) * (0 - (3 * -9)))) - 7)",155.000416493
(((-1 - ((0 * 3) * 9)) + -4) / ((-5 * 4) * (2 - (8 / (7 + -5))))),-0.125
(((2 / ((-3 / 6) + (9 * -2))) * (-2 - 4)) + (((6 - 1) - -1) + -2)),4.64864864865
"((-7 * -3) / (4 - ((2 + 5) - (-1 * (power(1, ((3 + 0) + 0)) + -2)))))",-10.5
"(((6 + 8) * -3) - (power((-1 * 9), (power(-4, (1 + 0)) * (1 / 4))) * 8))",-41.1111111111
"(((-7 + 6) + (-6 * power(4, (-2 + (0 + 0))))) - power(5, (6 + (0 + 0))))",-15626.375
"power((((6 - (-4 / (-6 - 3))) * (4 / 2)) - 8), (-6 - (-2 + power(-8, 1))))",93.6832799878
"(((-3 - 6) + (3 - 6)) * power(((-9 + 8) * 2), ((0 + 0) + (0 + 0))))",-12
"(((3 + ((1 - 5) * (7 * 5))) / 7) * power(power((-7 * 1), -3), (6 + 0)))",-1.20187086355e-14
((((-2 + -6) / (((-7 + 6) - (4 + -4)) * (9 * -1))) + -4) - (9 / 8)),-6.01388888889
"(power((0 * -3), 5) * ((-1 * power(1, 2)) - power(power(8, ((-3 + 0) + 0)), 2)))",0
"(((power(-9, -2) + -6) + power(-3, (-2 + (0 + ((0 + 0) + 0))))) * (-9 * 7))",370.222222222
(((((-2 / -6) * -8) * (-4 - -8)) + (-7 + ((5 - 8) * -1))) + (-6 / -7)),-13.8095238095
"power(9, ((((5 + 0) + (0 + 0)) + 0) + (0 + ((0 + (0 + 0)) + 0))))",59049
"((power(6, -5) * (-3 * 0)) / power(power(-9, (7 + -4)), ((0 + 0) + (0 + 0))))",-0
"(((power((-7 / 7), 1) - (3 - -5)) * ((2 - (0 * -3)) - -8)) * (-7 * -2))",-1260
"((9 * -9) * ((-4 * (4 + 5)) + power((-8 / 4), (-1 + ((0 + 0) + 0)))))",2956.5
"((0 - -7) + ((power(8, 3) + ((3 - -7) * 1)) - ((0 - (0 - -1)) + -7)))",537
"(((-6 + 0) - (power(7, (0 + 0)) * -4)) - ((9 - (0 - -9)) * (7 - 5)))",-2
(-3 * (((9 - 4) * (((4 * 7) - 0) - -9)) - (9 + ((-2 - -5) - -4)))),-507
"(((-5 + -8) * ((-1 - power(-2, -6)) + (((-7 + 5) - -6) / 2))) + power(-8, -1))",-12.921875
"((-4 - -7) + (((6 + -3) + 7) - (power((6 + -9), (-7 - -3)) - (7 * 9))))",75.987654321
(((-6 / ((9 / -6) / 8)) + (-6 * 7)) / ((-3 / (8 / -6)) - (-7 * -8))),0.186046511628
"((((-9 / -6) - 8) + 9) + (power(-9, -4) + ((5 / 4) * (8 / (3 - -8)))))",3.40924332488
"((((9 * 1) - (-4 + -2)) * (power(-7, -2) - (-2 + 6))) * ((9 - -4) * 5))",-3880.10204082
"((4 + -1) - power((power((3 * 8), (-9 + 9)) - (7 / ((2 + 3) - -2))), 1))",3
"((power((-6 * (2 + 6)), -6) - (power((-7 / -6), (-7 - (-9 - 4))) * 7)) / -4)",4.41284615053
"(-8 / ((power((7 * -5), 2) / (0 - 9)) - (-6 + ((6 + 9) / (-9 + -1)))))",0.0622030237581
(((-3 + (9 + 2)) - (-4 * ((6 / -5) / -9))) + ((-8 + -2) + (6 * -9))),-55.4666666667
"(((1 + 8) / (7 + -2)) * (power((9 * power(-1, (9 + -7))), (-3 + 0)) * -7))",-0.0172839506173
"(power(((2 - 7) - (power(-6, 1) * -5)), ((4 + 0) + (0 + 0))) - (1 + -6))",1500630
"(power((power(3, -2) + (9 * -3)), (1 + ((0 + 0) + 0))) * (-5 + (1 - -1)))",80.6666666667
"(6 - (power((2 / 1), ((-5 + 0) + ((0 + 0) + 0))) + (power(-8, 5) - 2)))",32775.96875
"power(power((2 * (-4 * 1)), 5), (((-3 + 0) + 0) + ((0 + 0) + (0 + 0))))",-2.84217094304e-14
"((3 * ((-1 + 7) * 0)) + (power((((7 + -5) + -6) - 4), (-2 + 0)) - 7))",-6.984375
"(((9 - -7) / power((0 - power(8, 2)), (0 + 0))) + power(-6, (1 + (-2 - 3))))",16.0007716049
((-9 - (9 * -5)) - ((-9 + (7 + -9)) / (((-9 - -6) / (-5 + -4)) + 2))),40.7142857143
((((-2 + 8) * (4 * 7)) - ((0 - 3) * (-2 + (9 - (-6 - 5))))) - 7),215
"(((power(3, (3 + 0)) - (power(9, -6) * 7)) * -6) * (power(0, 3) - (-6 / 2)))",-485.999762909
"((power((5 - -1), (7 + -4)) + -4) / (((0 * 4) - ((-1 - 1) * -3)) - 4))",-21.2
"power(9, ((1 + 0) + ((0 + (0 + (0 + 0))) + ((0 + 0) + (0 + 0)))))",9
"(power((((-7 - (3 / -9)) * 6) + -5), (((1 + (0 + 0)) + 0) + 0)) - -5)",-40
"power((((3 + -6) * 9) - (-6 - power(7, 4))), ((1 + 0) + ((0 + 0) + 0)))",2380
"(7 - power(((4 / (-5 * 2)) / (-4 + -6)), (((-5 + 0) + (0 + 0)) + 0)))",-9765618
"((6 * (power(-7, -4) + ((-2 + -2) * (-8 * 4)))) - ((7 / (-7 - -5)) * 7))",792.502498959
"(-2 * (((-5 - -5) + ((power(4, 3) + 6) - (-4 + -5))) * (-3 - (-5 - 0))))",-316
((((-2 * 5) * 4) + 8) + ((-7 / 3) + (((-2 + -5) + -5) / (7 + -8)))),-22.3333333333
"power(power((((8 - (((-4 * -3) - -3) + (8 * -8))) - 1) / -6), (5 + 1)), -4)",5.23741950254e-24
(((((8 / 3) - -3) + -5) / (-8 - (0 + (-8 - -6)))) - (3 * (-1 + -1))),5.88888888889
"power(power(((7 / 3) * power(9, (-2 * 1))), (0 + (0 + (-5 + 0)))), (-6 + 0))",6.09190318141e-47
"((-3 * 0) + (power((((((-4 / 4) - -9) - power(-8, -1)) + 9) + 4), -3) + 5))",5.00010607422
"(8 + ((2 / ((-4 * (2 / 4)) * -9)) * ((1 * -7) - power((-8 * 1), 3))))",64.1111111111
"(((-1 - 3) / 6) / power((-9 - ((-4 / 2) * -7)), ((-1 + 0) + (0 + 0))))",15.3333333333
"((((-1 / (5 - 4)) + 0) - power((-4 * 8), ((1 + 0) + (0 + 0)))) * 7)",217
(((3 + 6) - (1 + ((((-6 - 3) * (1 - 1)) + -9) - -7))) / (-4 - -6)),5
"power(power((5 * ((4 + -2) + power(3, (0 + 0)))), (3 + 0)), ((0 + 0) + 0))",1
"power(power(((3 - (-6 - -8)) + (-2 - -8)), (0 + (0 + (0 + 0)))), (-2 + -2))",1
"(((((7 - power(6, -6)) + 7) - (-9 - 8)) * (3 - power(-2, (1 + 0)))) - 3)",151.999892833
((((4 * -3) - 9) / (1 * (4 / 4))) * ((-7 - 9) * ((-7 * -6) * -6))),-84672
"(9 * (power((power(-5, 0) / (1 - ((-2 - 1) - ((4 * -5) * 4)))), -2) / -5))",-10396.8
(((5 * -3) + ((5 * (((-2 + 9) / -6) + 3)) + 5)) * (6 - (5 - -8))),5.83333333333
"(power(((1 * (power(9, -6) + -4)) + (-8 * 8)), (-2 + ((0 + 0) + 0))) + -5)",-4.99978373701
"power((8 / 3), (((0 + ((0 + 0) + 0)) + 0) + ((0 + (0 + 0)) + 0)))",1
"(power((-6 - -3), ((3 + 0) + (0 + (0 + 0)))) - ((7 - -8) * (0 * 6)))",-27
"((-3 * (-3 / -2)) + ((9 + 4) + (power((4 - -2), (8 + -2)) + (6 - -6))))",46676.5
(5 - (((-7 + (1 * (1 * -6))) * (((3 - -1) - -2) - (3 / 6))) - 9)),85.5
"(power((-1 * (-8 + 9)), 2) + power(-2, (((((2 + 0) + 0) + 0) + 0) + 0)))",5
(((-4 * 4) - (((6 / -4) / 9) + (-6 * ((-6 * 0) + 1)))) - (-6 - -3)),-6.83333333333
"(power(power(power((0 - 2), 3), 4), ((1 + 0) + 0)) - (5 / ((-7 + 9) + -3)))",4101
"(((7 - -6) * ((-3 * 0) * (-3 - (1 - power(-2, (8 + -6)))))) / power(4, 2))",-0
"(power((-8 - (8 - 4)), (((0 + 0) + ((0 + 0) + 0)) + 0)) / (3 * -5))",-0.0666666666667
"(((-5 / 2) * power(-6, (0 + ((0 + 0) + (0 + 0))))) - ((1 * 8) * -4))",29.5
"(((3 * power((9 - 5), 6)) - (((-5 + -3) / -2) / -8)) * power((-5 - 2), -6))",0.104450526566
"(((5 * 4) - 2) * power(2, (((1 + 0) + ((0 + 0) + 0)) + (0 + 0))))",36
"power(((6 * (-3 + -9)) + (((-4 / -2) * (-3 + (-9 + -6))) / 9)), (6 + -7))",-0.0131578947368
"((((2 * 1) * (-6 - -8)) * (power(5, -1) - (-5 / -5))) + power(-2, (-3 + 0)))",-3.325
((-1 - 7) + ((1 - ((9 + 1) - 5)) + (-3 + (((-9 - -6) - -8) * 8)))),25
(((-8 * (7 * -8)) + ((-7 / 7) + 3)) / (3 - (-8 - ((-2 + -8) - 9)))),-56.25
"((power((((-2 - 6) * -6) + -7), -3) * -9) / (-1 * (((9 * -2) / -5) + 6)))",1.36025304334e-05
"((power(7, 0) - (((-5 * 0) + 1) + (-4 / 8))) * power(((3 / 8) / 1), 2))",0.0703125
"power(((power(3, (-8 + 8)) * 1) - (power((5 + -2), (2 + 0)) + -3)), (3 + 0))",-125
(1 + ((((3 / (-4 + -8)) - (4 / -7)) - 9) - ((8 + (-9 * -3)) * -3))),97.3214285714
"(((-7 + power(3, 4)) - (8 - (5 / (2 + -9)))) * ((5 + 7) - (-2 + 9)))",326.428571429
"(-7 - (power((power(-6, 0) + (-4 - -9)), 4) / (-8 + (-8 / (power(9, -5) - -3)))))",114.500171467
"((((-1 + 2) / -5) + 2) + ((9 * (-2 - power((-9 - 1), -5))) - (4 - -1)))",-21.19991
(((-1 + (-7 * (-2 - ((-9 + 2) + 7)))) + (-1 - (1 * 5))) + (2 + -8)),1
"((((-9 + 3) - -6) - (power(-3, 3) / -4)) - ((5 - (0 + -8)) - power(7, -6)))",-19.7499915001
"(power(0, ((6 + 0) + 0)) + ((6 - power((-8 + -8), -3)) - power(-5, (1 * 3))))",131.000244141
"(((-6 * -5) + 1) * power((-6 - (-7 + -8)), ((0 * 5) / (power(-2, -1) / 9))))",31
"((-9 * 4) - (power((3 * -8), ((0 + 0) + ((0 + (0 + 0)) + 0))) / -8))",-35.875
(0 - (((-4 * 1) + (-8 * -2)) * ((1 / -7) * (0 * ((-1 / -2) * -8))))),0
"power((-6 - (-3 / 2)), ((((3 + 0) + 0) + (0 + 0)) + (0 + (0 + 0))))",-91.125
"((((-8 * -5) / (-8 - -1)) - power(power(-1, -2), 6)) * (0 / power((0 + 6), 5)))",-0
"(((1 + 9) * power(((2 - (-1 * -6)) + -3), 5)) + power((-9 - -2), (9 + -7)))",-168021
"((power(-3, 4) / (((4 / 1) - 6) - (2 * (1 + 5)))) + (power(7, -2) * -3))",-5.84693877551
((((1 + ((-4 / -3) - -4)) + 7) - 5) - ((0 - (-6 + (0 - 6))) - -6)),-9.66666666667
"((power((-5 + -7), 5) - 7) + ((3 * 3) + ((1 - 4) + (0 / (-6 + 3)))))",-248833
((((2 * -7) - ((-1 * -4) * -2)) * (-1 + -3)) + ((3 + 6) + (-3 / -5))),33.6
"((0 - (3 * ((power((6 * 8), 4) * 4) / ((9 - 2) / -8)))) + power(-4, -2))",72801133.7768
"(power((power(9, -2) * (-8 - 0)), -5) + ((5 * 0) / (((-9 + 9) - -7) * 9)))",-106408.215363
"((((0 * -6) * (5 - (1 - -4))) - ((power(-4, -4) * -3) + -5)) * (8 / 6))",6.68229166667
"((((7 * power(-6, (1 + (0 + 0)))) * (4 * 5)) * power(-7, 0)) * (6 / 2))",-2520
"((power(5, -2) / (6 + 2)) * ((((-3 * -3) + 6) - power(-8, power(1, 4))) / 4))",0.02875
"(7 * ((power(((-7 / 1) / (-4 / 3)), -6) - -5) / ((1 - 9) / (-5 - -4))))",4.37504178806
"(power((0 + -5), (((-2 + (0 + 0)) + 0) + (0 + (0 + 0)))) * (-4 + -4))",-0.32
"((7 * 4) + (-6 - (power(-1, -3) + (power(power(2, -6), -4) / power(-6, (-5 - -3))))))",-603979753
"(((power(3, ((-3 + 0) + (0 + 0))) + -1) - -7) * (1 / (5 - (5 - 8))))",0.75462962963
"((4 + (0 * power(2, (1 + 0)))) * (8 * ((-7 - (4 + -5)) - (-1 * 1))))",-160
"(((2 - -9) - (-5 - (-7 * -8))) + (1 * power((4 - -6), (2 + (0 + 0)))))",172
"((-6 * 5) + (((-9 - 9) + (3 / -2)) * ((7 + 1) + power((-9 / -2), -3))))",-186.21399177
"power(power(-7, (0 + 0)), ((((1 + 0) + 0) + ((0 + 0) + 0)) + (0 + 0)))",1
"((power(-7, ((-3 + 0) + (0 + 0))) - -7) + (power(-7, 5) - ((2 - -8) / 3)))",-16803.3362488
"(((1 / power(7, ((1 + 0) + (0 + 0)))) / power(-5, -1)) + (8 / (9 - 4)))",0.885714285714
"(((-8 * 6) * ((8 - 3) / (-5 - -9))) - power(power(7, 1), ((-2 + 0) + 0)))",-60.0204081633
"(-1 / power(((power(-3, power(4, 1)) * (-3 - -3)) - (-6 + (2 + (6 * -7)))), -3))",-97336
"power(power((-7 - (-3 + -3)), ((1 + -1) * ((-6 - 2) / (power(-2, -5) - -2)))), -4)",1
"((power(1, -2) - (6 - ((3 + (6 * -7)) * power(-6, -5)))) * (6 * (-1 / -7)))",-4.28141534392
"power(power((-8 + (-4 * 1)), ((-1 + 0) + (0 + 0))), ((-2 * -5) + (-7 - 1)))",0.00694444444444
"((8 - (6 * (-4 + -4))) * (power((0 * -8), 6) + ((-5 / -5) * (2 - 0))))",112
"power(((-8 - -2) / (-9 / (((1 * -7) - (-3 + 3)) * (4 * 3)))), (0 + 0))",1
"((power((power(-6, (0 + (0 + 0))) / -5), (3 + 0)) / (-4 / 6)) * (-5 + 0))",-0.06
((-2 + -5) / ((-1 + (0 * -4)) - ((-8 / (8 - -5)) * ((-6 + -2) - -1)))),1.31884057971
"power(((-1 - 0) - (4 / ((7 * -7) + 8))), ((0 + 0) + (0 + (0 + 0))))",1
"(power(-4, 3) + (((9 + 1) * ((power(-9, -3) - -9) / 1)) / ((-7 - 5) + -1)))",-70.9220217368
"((3 + (-5 * (-8 - ((7 * (-5 + -8)) + (9 - (-7 + 5)))))) * power(6, -3))",-1.65277777778
"((3 * (power(3, (4 - 8)) * 0)) - (3 / (((-3 + 8) / -2) + (-4 - -9))))",-1.2
"((0 / 4) - (power(((5 - 1) / 1), (2 * -3)) - (-3 - (4 * (-4 - 1)))))",16.9997558594
((-1 + ((((6 * 9) * 5) - ((-8 / 7) * 5)) + (7 / -9))) + (7 + 3)),283.936507937
"(((-3 * 3) - 8) / ((power(9, 6) + -4) * ((-9 - -1) / (-6 * power(-1, 3)))))",2.39915549726e-05
(((-6 - -1) * (-8 + 3)) / (((1 - 4) * 2) + ((5 - 5) + (9 * -1)))),-1.66666666667
"(4 * (power(-2, -1) + (((0 * (-8 / -8)) + (-8 - -2)) * ((7 / -3) / 3))))",16.6666666667
"(((-6 + -9) - 3) - (0 / (power((-6 * -1), ((-2 + 0) + 0)) * (5 - -2))))",-18
"(power(power(-2, -2), 4) + (((-3 + -6) / (-2 / -4)) - (power(-4, -4) + (-8 - 3))))",-7
"(((1 * (-4 - (2 - 8))) / ((2 + 9) - power(9, -4))) * ((7 * -9) + 5))",-10.5456006651
"(((power(-6, 6) / (6 + 4)) + ((-9 * 5) - (3 - -9))) * (-3 / power(3, 1)))",-4608.6
"(((-1 * -1) + -4) - ((7 * 5) + power(((0 + (-9 * (-6 * -9))) * 1), -3)))",-37.9999999913
"power((-1 - 3), power((power(-2, 3) + (-7 * power(power(-1, 1), ((1 + 0) + 0)))), -4))",-4
"(power((-2 / (((-2 / 2) + (6 * -3)) * 2)), -2) + (5 / ((-4 + -8) / 6)))",358.5
"(-8 + power((-9 - power((6 * -3), -5)), ((((3 + 0) + 0) + 0) + (0 + 0))))",-736.999871399
"(((power(7, 1) * (power(-2, -2) - power((-8 * 4), 3))) * (9 * 8)) + power(-5, -2))",16515198.04
((((-7 - (6 * 7)) * (5 * 7)) * ((-7 - 0) + 1)) * (9 * (7 / -8))),-81033.75
"((-7 + (((7 / -2) * power((-9 - -5), 5)) - -5)) - (power(-5, power(-7, 0)) + 1))",3586
"(((((power(9, 1) * 2) + -3) - ((-8 - 9) * -8)) - 0) + ((-8 / 1) - 6))",-135
"((-5 / power(power(9, 0), (3 + (-9 * 0)))) + power((-9 / (-1 - -8)), (-5 + 0)))",-5.2846280208
(-8 - (((-8 - 4) - -3) * ((-2 + -7) - ((-6 - -8) * ((-1 - 4) - 0))))),1
"(power(((-9 + (8 + 1)) - (-1 / (power(-2, (1 + 0)) - 8))), -2) / (-3 + -5))",-12.5
"((-1 * (-7 * -8)) * (-3 + (power(((-3 * (9 - (-7 / 6))) + -4), 0) * -6)))",504
"((((-3 / (-6 / 7)) * 7) + power((power(2, -1) + (9 + -5)), (5 + 0))) * 2)",3739.5625
"(power((-4 * (-6 / 5)), (0 + (3 + -6))) - ((power((2 / -3), -2) * 4) - 9))",0.00904224537037
"(((-5 + 5) / ((4 / -9) - power(3, 5))) / (((-6 - 6) / -2) * (3 + 6)))",-0
"power((power((-9 / (1 + -7)), ((5 + 0) + (0 + 0))) - -1), (0 + (0 + 0)))",1
"power((-1 - ((4 / 9) - (6 - power(((-6 - -9) + (-3 * 9)), -5)))), (0 + 0))",1
"(power(9, -6) + (((((4 - 6) - (4 * 7)) - 1) + ((-2 * -2) - 0)) - -8))",-18.9999981183
(((((7 - 6) / 9) - 7) - (3 - -4)) - (((9 + 6) - -4) - (-6 - 9))),-47.8888888889
"((power((-9 * (0 - (6 + 7))), (3 + 0)) + (9 + 1)) * ((-1 - 8) - 8))",-27227591
"power(((power((-3 + (-6 + 3)), -1) - (-4 * -5)) * 9), (-4 + (0 + (0 + 0))))",9.21496059674e-10
(0 / (((-1 / -6) * (-1 * ((-6 + 2) * 4))) * ((-8 - 3) * (5 * 7)))),-0
((2 * 4) * (((((7 - (7 + -1)) - 0) + (4 * (-8 - 5))) * -5) - -8)),2104
"power(((-6 * (-6 - 5)) * ((((power(-1, -4) + 4) - 9) - -9) - 1)), (1 + 0))",264
(((-8 + -1) * 6) + (-1 - (((3 / (1 * -6)) + -5) * (3 * (5 - -8))))),159.5
"power(((((2 - 2) + power(3, 4)) * (-1 / -7)) + (8 / -1)), ((1 + 0) + 0))",3.57142857143
"(-6 * power((power((power(-5, 3) * (-6 + 4)), ((-2 + 0) + 0)) + 5), (-4 + 0)))",-0.00959987712098
((2 * (-5 + (0 - -7))) + ((-6 - (1 * 8)) + ((-3 - 9) - (0 / -6)))),-22
"power(-6, ((((0 + 0) + 0) + ((0 + 0) + ((0 + 0) + 0))) + (0 + 0)))",1
"power(9, ((6 + 0) + (((0 + (0 + (0 + 0))) + 0) + (0 + (0 + 0)))))",531441
"(((power(((-9 * -9) + -6), 3) - -3) - ((9 - -7) - -7)) / ((-6 / 1) * -8))",8788.64583333
"(power(power((-1 + 4), ((-4 + 0) + 0)), ((3 + (0 + 0)) + (0 + 0))) / -9)",-2.09075158129e-07
"(-3 + (power(((-4 + 9) / ((-5 - -4) + -9)), (0 * 2)) - ((4 - 0) - 4)))",-2
"(((3 / power(5, (((1 + 0) + 0) + ((0 + 0) + (0 + 0))))) / 9) + 9)",9.06666666667
"power((power(((-8 / ((2 - -9) - -3)) * 0), 3) + 4), ((-3 + 0) + (0 + 0)))",0.015625
((((-5 * -4) / -6) / -4) * (3 - (-8 + ((-4 - 6) * ((3 / -7) + 6))))),55.5952380952
"power(2, ((1 + -9) / (-4 * power(power(-8, power(0, (9 - 5))), (4 + (0 + 0))))))",4
(((-2 * -9) + ((1 + 3) * (0 + ((9 + 1) + -2)))) * (-4 * (3 / 3))),-200
"(((2 - (1 / (-6 - (7 + (-1 + 6))))) - -1) + power((-5 - 9), (-5 - -9)))",38419.0555556
"((-5 - -9) / (((7 / power(-5, (-1 + ((0 + 0) + 0)))) - (1 * 3)) + -8))",-0.0869565217391
"power((-5 - -8), (((6 + 0) + ((0 + 0) + 0)) + (0 + ((0 + 0) + 0))))",729
"((-5 - (-8 - -6)) / power(2, ((1 + 0) + (0 + (0 + (0 + (0 + 0)))))))",-1.5
"(((3 * -3) * power((-2 + 2), 4)) - (7 * (((0 - 1) - -7) / (4 + 2))))",-7
"power(((7 / -3) / power((-5 * (5 * (5 + -2))), (-3 + 0))), (2 + (0 + 0)))",968994140625
